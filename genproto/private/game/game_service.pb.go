// Code generated by protoc-gen-go. DO NOT EDIT.
// source: private/game/game_service.proto

package game

import (
	context "context"
	fmt "fmt"
	log "github.com/dnovikoff/mahjong-api/genproto/public/log"
	rules "github.com/dnovikoff/mahjong-api/genproto/public/rules"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlayerType int32

const (
	PlayerType_PLAYER_TYPE_UNSPECIFIED PlayerType = 0
	// Expects that player will connect with Play method
	PlayerType_CLIENT PlayerType = 1
	// Predefined robots
	// Drops taken tiles
	PlayerType_ROBOT_TSUMOGIRI PlayerType = 2
	// Robot will try to play according to uke-ire
	PlayerType_ROBOT_EFFECTIVE PlayerType = 3
)

var PlayerType_name = map[int32]string{
	0: "PLAYER_TYPE_UNSPECIFIED",
	1: "CLIENT",
	2: "ROBOT_TSUMOGIRI",
	3: "ROBOT_EFFECTIVE",
}

var PlayerType_value = map[string]int32{
	"PLAYER_TYPE_UNSPECIFIED": 0,
	"CLIENT":                  1,
	"ROBOT_TSUMOGIRI":         2,
	"ROBOT_EFFECTIVE":         3,
}

func (x PlayerType) String() string {
	return proto.EnumName(PlayerType_name, int32(x))
}

func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870c881be7c20e8d, []int{0}
}

// The method of creating games is a subject to change.
type CreateRequest struct {
	// Types that are valid to be assigned to OneofRules:
	//	*CreateRequest_Rules
	//	*CreateRequest_RuleId
	OneofRules isCreateRequest_OneofRules `protobuf_oneof:"oneof_rules"`
	Timeouts   *rules.Timeouts            `protobuf:"bytes,3,opt,name=timeouts,proto3" json:"timeouts,omitempty"`
	// Should provide at least one Client player
	// Provide players in order, correspondig their EAST1 starting positions
	Players []*Player `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	// For debugging purposes and robots.
	// If provided - game will end after one round.
	// The conditions could be predefined.
	// If wall defined - will replace the wall with given values.
	// The number of tiles in wall could be reduced to at least 5 tiles.
	// Still all tiles should remain unique.
	// The exact number of tiles for indicators is 5.
	// The exact number of tiles for rinshan is 4.
	SingleRound *log.RoundInfo `protobuf:"bytes,5,opt,name=single_round,json=singleRound,proto3" json:"single_round,omitempty"`
	// Redefine random seed for predictable game
	Seed *wrappers.Int64Value `protobuf:"bytes,6,opt,name=seed,proto3" json:"seed,omitempty"`
	// Just output the result, with no actual game created (validation)
	DryRun               bool     `protobuf:"varint,7,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870c881be7c20e8d, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

type isCreateRequest_OneofRules interface {
	isCreateRequest_OneofRules()
}

type CreateRequest_Rules struct {
	Rules *rules.Ruleset `protobuf:"bytes,1,opt,name=rules,proto3,oneof"`
}

type CreateRequest_RuleId struct {
	RuleId string `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3,oneof"`
}

func (*CreateRequest_Rules) isCreateRequest_OneofRules() {}

func (*CreateRequest_RuleId) isCreateRequest_OneofRules() {}

func (m *CreateRequest) GetOneofRules() isCreateRequest_OneofRules {
	if m != nil {
		return m.OneofRules
	}
	return nil
}

func (m *CreateRequest) GetRules() *rules.Ruleset {
	if x, ok := m.GetOneofRules().(*CreateRequest_Rules); ok {
		return x.Rules
	}
	return nil
}

func (m *CreateRequest) GetRuleId() string {
	if x, ok := m.GetOneofRules().(*CreateRequest_RuleId); ok {
		return x.RuleId
	}
	return ""
}

func (m *CreateRequest) GetTimeouts() *rules.Timeouts {
	if m != nil {
		return m.Timeouts
	}
	return nil
}

func (m *CreateRequest) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CreateRequest) GetSingleRound() *log.RoundInfo {
	if m != nil {
		return m.SingleRound
	}
	return nil
}

func (m *CreateRequest) GetSeed() *wrappers.Int64Value {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *CreateRequest) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateRequest_Rules)(nil),
		(*CreateRequest_RuleId)(nil),
	}
}

type CreateResponse struct {
	// ID of created game. Later used to get log ID.
	// Could be any string, generated by server. Client should not rely on id format.
	GameId string         `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Rules  *rules.Ruleset `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
	// Client players will be given tokens to join the game
	Players []*Player `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	// Please play the game in a given time
	Ttl                  *duration.Duration `protobuf:"bytes,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870c881be7c20e8d, []int{1}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *CreateResponse) GetRules() *rules.Ruleset {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *CreateResponse) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CreateResponse) GetTtl() *duration.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

type Player struct {
	// Name displayed
	Caption string `protobuf:"bytes,1,opt,name=caption,proto3" json:"caption,omitempty"`
	// Should not fill in request. Will be filled in reply
	// Could be any string, generated by server. Client should not rely on id format.
	Token                string     `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	PlayerType           PlayerType `protobuf:"varint,3,opt,name=player_type,json=playerType,proto3,enum=mahjong.private.game.PlayerType" json:"player_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_870c881be7c20e8d, []int{2}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *Player) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Player) GetPlayerType() PlayerType {
	if m != nil {
		return m.PlayerType
	}
	return PlayerType_PLAYER_TYPE_UNSPECIFIED
}

func init() {
	proto.RegisterEnum("mahjong.private.game.PlayerType", PlayerType_name, PlayerType_value)
	proto.RegisterType((*CreateRequest)(nil), "mahjong.private.game.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "mahjong.private.game.CreateResponse")
	proto.RegisterType((*Player)(nil), "mahjong.private.game.Player")
}

func init() { proto.RegisterFile("private/game/game_service.proto", fileDescriptor_870c881be7c20e8d) }

var fileDescriptor_870c881be7c20e8d = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5f, 0x4f, 0xdb, 0x3e,
	0x14, 0xa5, 0x2d, 0xa4, 0x70, 0xfb, 0x83, 0x5f, 0xe5, 0xa1, 0x11, 0x60, 0xda, 0x2a, 0xb6, 0x87,
	0x6a, 0x7f, 0x12, 0xa9, 0x4c, 0x68, 0x7b, 0x84, 0x12, 0x20, 0x12, 0x83, 0xca, 0x0d, 0x48, 0xec,
	0x25, 0x4a, 0x9b, 0xdb, 0x90, 0x91, 0xda, 0x99, 0xe3, 0x30, 0x55, 0xfb, 0x6a, 0xfb, 0x26, 0xfb,
	0x32, 0x53, 0xec, 0x04, 0x18, 0x20, 0xa4, 0x3d, 0xc4, 0xf2, 0xbd, 0xe7, 0x1c, 0xfb, 0xfa, 0x5c,
	0x3b, 0xf0, 0x2a, 0x15, 0xf1, 0x75, 0x20, 0xd1, 0x8e, 0x82, 0xa9, 0x1e, 0xfc, 0x0c, 0xc5, 0x75,
	0x3c, 0x46, 0x2b, 0x15, 0x5c, 0x72, 0xb2, 0x3a, 0x0d, 0x2e, 0xbf, 0x71, 0x16, 0x59, 0x25, 0xd1,
	0x2a, 0x38, 0x1b, 0x2f, 0x23, 0xce, 0xa3, 0x04, 0x6d, 0xc5, 0x19, 0xe5, 0x13, 0x3b, 0xcc, 0x45,
	0x20, 0x63, 0xce, 0xb4, 0xea, 0x21, 0xfe, 0x43, 0x04, 0x69, 0x8a, 0x22, 0x2b, 0xf1, 0xd5, 0x34,
	0x1f, 0x25, 0xf1, 0xd8, 0x4e, 0x78, 0x54, 0x7c, 0x65, 0xd6, 0x2c, 0xb3, 0x22, 0x4f, 0x30, 0xd3,
	0xa3, 0x46, 0xb6, 0x7e, 0xd7, 0x61, 0xb9, 0x2f, 0x30, 0x90, 0x48, 0xf1, 0x7b, 0x8e, 0x99, 0x24,
	0x16, 0x2c, 0x28, 0x82, 0x59, 0xeb, 0xd4, 0xba, 0xad, 0xde, 0x73, 0xab, 0xaa, 0x53, 0xcb, 0x68,
	0x31, 0xa2, 0x3c, 0x9a, 0xa3, 0x9a, 0x46, 0xd6, 0xa1, 0x59, 0x4c, 0xfc, 0x38, 0x34, 0xeb, 0x9d,
	0x5a, 0x77, 0xe9, 0x68, 0x8e, 0x1a, 0x45, 0xc2, 0x0d, 0xc9, 0x36, 0x2c, 0xca, 0x78, 0x8a, 0x3c,
	0x97, 0x99, 0xd9, 0x50, 0xab, 0xad, 0xdd, 0x5b, 0xcd, 0x2b, 0x61, 0x7a, 0x43, 0x24, 0x3b, 0xd0,
	0x4c, 0x93, 0x60, 0x86, 0x22, 0x33, 0xe7, 0x3b, 0x8d, 0x6e, 0xab, 0xf7, 0xc2, 0x7a, 0xcc, 0x29,
	0x6b, 0xa0, 0x48, 0xb4, 0x22, 0x93, 0xcf, 0xf0, 0x5f, 0x16, 0xb3, 0x28, 0x41, 0x5f, 0xf0, 0x9c,
	0x85, 0xe6, 0xc2, 0xbd, 0xf2, 0x0b, 0x37, 0x68, 0x81, 0xb8, 0x6c, 0xc2, 0x69, 0x4b, 0x73, 0x55,
	0x82, 0xd8, 0x30, 0x9f, 0x21, 0x86, 0xa6, 0xa1, 0x24, 0x9b, 0x96, 0xf6, 0xd8, 0xaa, 0x3c, 0xb6,
	0x5c, 0x26, 0x77, 0x3e, 0x9e, 0x07, 0x49, 0x8e, 0x54, 0x11, 0xc9, 0x1a, 0x34, 0x43, 0x31, 0xf3,
	0x45, 0xce, 0xcc, 0x66, 0xa7, 0xd6, 0x5d, 0xa4, 0x46, 0x28, 0x66, 0x34, 0x67, 0x7b, 0xcb, 0xd0,
	0xe2, 0x0c, 0xf9, 0xc4, 0x57, 0xc7, 0xdb, 0xfa, 0x55, 0x83, 0x95, 0xca, 0xdd, 0x2c, 0xe5, 0x2c,
	0xc3, 0x42, 0xaa, 0x2e, 0x43, 0x1c, 0x2a, 0x83, 0x97, 0xa8, 0x51, 0x84, 0x6e, 0x48, 0xde, 0x57,
	0xbe, 0xd7, 0x9f, 0xf2, 0xbd, 0x72, 0xfd, 0x8e, 0x4b, 0x8d, 0x7f, 0x71, 0xe9, 0x1d, 0x34, 0xa4,
	0x4c, 0xcc, 0x79, 0xb5, 0xc7, 0xfa, 0x83, 0x93, 0xee, 0x97, 0xb7, 0x8d, 0x16, 0xac, 0xad, 0x9f,
	0x60, 0x68, 0x3d, 0x31, 0xa1, 0x39, 0x0e, 0xd2, 0x02, 0x29, 0xab, 0xae, 0x42, 0xb2, 0x0a, 0x0b,
	0x92, 0x5f, 0x21, 0xd3, 0xcd, 0xa7, 0x3a, 0x20, 0xbb, 0xd0, 0xd2, 0x3b, 0xfa, 0x72, 0x96, 0xa2,
	0x6a, 0xfe, 0x4a, 0xaf, 0xf3, 0x54, 0x89, 0xde, 0x2c, 0x45, 0x0a, 0xe9, 0xcd, 0xfc, 0xad, 0x0f,
	0x70, 0x8b, 0x90, 0x4d, 0x58, 0x1b, 0x1c, 0xef, 0x5e, 0x38, 0xd4, 0xf7, 0x2e, 0x06, 0x8e, 0x7f,
	0x76, 0x32, 0x1c, 0x38, 0x7d, 0xf7, 0xc0, 0x75, 0xf6, 0xdb, 0x73, 0x04, 0xc0, 0xe8, 0x1f, 0xbb,
	0xce, 0x89, 0xd7, 0xae, 0x91, 0x67, 0xf0, 0x3f, 0x3d, 0xdd, 0x3b, 0xf5, 0x7c, 0x6f, 0x78, 0xf6,
	0xe5, 0xf4, 0xd0, 0xa5, 0x6e, 0xbb, 0x7e, 0x9b, 0x74, 0x0e, 0x0e, 0x9c, 0xbe, 0xe7, 0x9e, 0x3b,
	0xed, 0x46, 0x6f, 0x04, 0xad, 0xc3, 0x60, 0x8a, 0x43, 0xfd, 0x2a, 0xc9, 0x10, 0x0c, 0xdd, 0x2a,
	0xf2, 0xfa, 0xf1, 0x3a, 0xff, 0x7a, 0x26, 0x1b, 0x6f, 0x9e, 0x26, 0xe9, 0x6e, 0xef, 0x7d, 0xfa,
	0xba, 0x13, 0xc5, 0xf2, 0x32, 0x1f, 0x59, 0x63, 0x3e, 0xb5, 0x43, 0xc6, 0xaf, 0xe3, 0x2b, 0x3e,
	0x99, 0xd8, 0xa5, 0xf6, 0x43, 0x90, 0xc6, 0x76, 0x84, 0x4c, 0xf9, 0x6f, 0xdf, 0xfd, 0x63, 0x8c,
	0x0c, 0x95, 0xdb, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x5a, 0xf2, 0x01, 0x48, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameServiceClient is the client API for GameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
}

type gameServiceClient struct {
	cc *grpc.ClientConn
}

func NewGameServiceClient(cc *grpc.ClientConn) GameServiceClient {
	return &gameServiceClient{cc}
}

func (c *gameServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/mahjong.private.game.GameService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServiceServer is the server API for GameService service.
type GameServiceServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
}

func RegisterGameServiceServer(s *grpc.Server, srv GameServiceServer) {
	s.RegisterService(&_GameService_serviceDesc, srv)
}

func _GameService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mahjong.private.game.GameService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mahjong.private.game.GameService",
	HandlerType: (*GameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _GameService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "private/game/game_service.proto",
}
