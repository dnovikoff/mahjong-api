// Code generated by protoc-gen-go. DO NOT EDIT.
// source: private/log/log_service.proto

package log

import (
	context "context"
	fmt "fmt"
	log "github.com/dnovikoff/mahjong-api/genproto/public/log"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetDebugLogRequest struct {
	LogId                string   `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDebugLogRequest) Reset()         { *m = GetDebugLogRequest{} }
func (m *GetDebugLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetDebugLogRequest) ProtoMessage()    {}
func (*GetDebugLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15e7bc81f2aa2b7f, []int{0}
}

func (m *GetDebugLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDebugLogRequest.Unmarshal(m, b)
}
func (m *GetDebugLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDebugLogRequest.Marshal(b, m, deterministic)
}
func (m *GetDebugLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDebugLogRequest.Merge(m, src)
}
func (m *GetDebugLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetDebugLogRequest.Size(m)
}
func (m *GetDebugLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDebugLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDebugLogRequest proto.InternalMessageInfo

func (m *GetDebugLogRequest) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

type GetDebugLogResponse struct {
	Debug                *DebugLog `protobuf:"bytes,1,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetDebugLogResponse) Reset()         { *m = GetDebugLogResponse{} }
func (m *GetDebugLogResponse) String() string { return proto.CompactTextString(m) }
func (*GetDebugLogResponse) ProtoMessage()    {}
func (*GetDebugLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_15e7bc81f2aa2b7f, []int{1}
}

func (m *GetDebugLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDebugLogResponse.Unmarshal(m, b)
}
func (m *GetDebugLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDebugLogResponse.Marshal(b, m, deterministic)
}
func (m *GetDebugLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDebugLogResponse.Merge(m, src)
}
func (m *GetDebugLogResponse) XXX_Size() int {
	return xxx_messageInfo_GetDebugLogResponse.Size(m)
}
func (m *GetDebugLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDebugLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDebugLogResponse proto.InternalMessageInfo

func (m *GetDebugLogResponse) GetDebug() *DebugLog {
	if m != nil {
		return m.Debug
	}
	return nil
}

type SaveLogRequest struct {
	Log                  *log.Log  `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Debug                *DebugLog `protobuf:"bytes,2,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SaveLogRequest) Reset()         { *m = SaveLogRequest{} }
func (m *SaveLogRequest) String() string { return proto.CompactTextString(m) }
func (*SaveLogRequest) ProtoMessage()    {}
func (*SaveLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15e7bc81f2aa2b7f, []int{2}
}

func (m *SaveLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveLogRequest.Unmarshal(m, b)
}
func (m *SaveLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveLogRequest.Marshal(b, m, deterministic)
}
func (m *SaveLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveLogRequest.Merge(m, src)
}
func (m *SaveLogRequest) XXX_Size() int {
	return xxx_messageInfo_SaveLogRequest.Size(m)
}
func (m *SaveLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveLogRequest proto.InternalMessageInfo

func (m *SaveLogRequest) GetLog() *log.Log {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *SaveLogRequest) GetDebug() *DebugLog {
	if m != nil {
		return m.Debug
	}
	return nil
}

type SaveLogResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveLogResponse) Reset()         { *m = SaveLogResponse{} }
func (m *SaveLogResponse) String() string { return proto.CompactTextString(m) }
func (*SaveLogResponse) ProtoMessage()    {}
func (*SaveLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_15e7bc81f2aa2b7f, []int{3}
}

func (m *SaveLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveLogResponse.Unmarshal(m, b)
}
func (m *SaveLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveLogResponse.Marshal(b, m, deterministic)
}
func (m *SaveLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveLogResponse.Merge(m, src)
}
func (m *SaveLogResponse) XXX_Size() int {
	return xxx_messageInfo_SaveLogResponse.Size(m)
}
func (m *SaveLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveLogResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetDebugLogRequest)(nil), "mahjong.private.log.GetDebugLogRequest")
	proto.RegisterType((*GetDebugLogResponse)(nil), "mahjong.private.log.GetDebugLogResponse")
	proto.RegisterType((*SaveLogRequest)(nil), "mahjong.private.log.SaveLogRequest")
	proto.RegisterType((*SaveLogResponse)(nil), "mahjong.private.log.SaveLogResponse")
}

func init() { proto.RegisterFile("private/log/log_service.proto", fileDescriptor_15e7bc81f2aa2b7f) }

var fileDescriptor_15e7bc81f2aa2b7f = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x89, 0xd2, 0x8a, 0x53, 0xf0, 0xcf, 0x56, 0x51, 0x02, 0x05, 0x89, 0x82, 0x05, 0x71,
	0x03, 0x2d, 0xe2, 0x5d, 0x04, 0x51, 0x7a, 0x6a, 0x3d, 0x79, 0xd1, 0xfc, 0x99, 0x6e, 0x57, 0xd3,
	0x4c, 0x4c, 0x36, 0xf9, 0x84, 0x7e, 0x30, 0xd9, 0x6c, 0x1a, 0x53, 0x0c, 0x4a, 0x0f, 0xb9, 0x4c,
	0x7e, 0xef, 0xbd, 0xd9, 0xb7, 0x0b, 0x83, 0x24, 0x95, 0x85, 0xa7, 0xd0, 0x8d, 0x48, 0xe8, 0xef,
	0x35, 0xc3, 0xb4, 0x90, 0x01, 0xf2, 0x24, 0x25, 0x45, 0xac, 0xbf, 0xf4, 0x16, 0xef, 0x14, 0x0b,
	0x5e, 0x61, 0x3c, 0x22, 0x61, 0x9f, 0x34, 0x35, 0x21, 0xfa, 0xb9, 0x30, 0xb4, 0x7d, 0x94, 0xe4,
	0x7e, 0x24, 0x83, 0x95, 0x97, 0x99, 0x3a, 0x57, 0xc0, 0x1e, 0x50, 0xdd, 0x6b, 0x6e, 0x42, 0x62,
	0x8a, 0x9f, 0x39, 0x66, 0x8a, 0x1d, 0x43, 0x57, 0xc7, 0xc9, 0xf0, 0xd4, 0x3a, 0xb3, 0x86, 0xbb,
	0xd3, 0x4e, 0x44, 0xe2, 0x31, 0x74, 0x9e, 0xa0, 0xbf, 0x06, 0x67, 0x09, 0xc5, 0x19, 0xb2, 0x31,
	0x74, 0xca, 0xa0, 0x12, 0xee, 0x8d, 0x06, 0xbc, 0x65, 0x2f, 0x5e, 0xab, 0x0c, 0xeb, 0x48, 0xd8,
	0x9b, 0x79, 0x05, 0x36, 0x42, 0x1d, 0xd8, 0x8e, 0x68, 0x65, 0x72, 0x50, 0x9b, 0x68, 0xb1, 0xa6,
	0xf4, 0xcf, 0x9f, 0xa8, 0xad, 0x0d, 0xa2, 0x0e, 0x61, 0xbf, 0x8e, 0x32, 0x2b, 0x8f, 0xbe, 0x2c,
	0x80, 0x09, 0x89, 0x99, 0xe9, 0x93, 0xbd, 0x41, 0xaf, 0x71, 0x30, 0x76, 0xd9, 0x6a, 0xfb, 0xbb,
	0x27, 0x7b, 0xf8, 0x3f, 0x58, 0x75, 0xf4, 0x0c, 0x3b, 0xd5, 0x0e, 0xec, 0xbc, 0x55, 0xb4, 0x5e,
	0x86, 0x7d, 0xf1, 0x37, 0x64, 0x5c, 0xef, 0x6e, 0x5f, 0x6e, 0x84, 0x54, 0x8b, 0xdc, 0xe7, 0x01,
	0x2d, 0xdd, 0x30, 0xa6, 0x42, 0x7e, 0xd0, 0x7c, 0xee, 0x56, 0xda, 0x6b, 0x2f, 0x91, 0xae, 0xc0,
	0xb8, 0xbc, 0x6a, 0xb7, 0xf1, 0x30, 0xfc, 0x6e, 0x39, 0x1a, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff,
	0xe8, 0xa1, 0x3e, 0x1c, 0x62, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogServiceClient is the client API for LogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogServiceClient interface {
	GetDebugLog(ctx context.Context, in *GetDebugLogRequest, opts ...grpc.CallOption) (*GetDebugLogResponse, error)
	SaveLog(ctx context.Context, in *SaveLogRequest, opts ...grpc.CallOption) (*SaveLogResponse, error)
}

type logServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogServiceClient(cc *grpc.ClientConn) LogServiceClient {
	return &logServiceClient{cc}
}

func (c *logServiceClient) GetDebugLog(ctx context.Context, in *GetDebugLogRequest, opts ...grpc.CallOption) (*GetDebugLogResponse, error) {
	out := new(GetDebugLogResponse)
	err := c.cc.Invoke(ctx, "/mahjong.private.log.LogService/GetDebugLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logServiceClient) SaveLog(ctx context.Context, in *SaveLogRequest, opts ...grpc.CallOption) (*SaveLogResponse, error) {
	out := new(SaveLogResponse)
	err := c.cc.Invoke(ctx, "/mahjong.private.log.LogService/SaveLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServiceServer is the server API for LogService service.
type LogServiceServer interface {
	GetDebugLog(context.Context, *GetDebugLogRequest) (*GetDebugLogResponse, error)
	SaveLog(context.Context, *SaveLogRequest) (*SaveLogResponse, error)
}

func RegisterLogServiceServer(s *grpc.Server, srv LogServiceServer) {
	s.RegisterService(&_LogService_serviceDesc, srv)
}

func _LogService_GetDebugLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDebugLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServiceServer).GetDebugLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mahjong.private.log.LogService/GetDebugLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServiceServer).GetDebugLog(ctx, req.(*GetDebugLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogService_SaveLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServiceServer).SaveLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mahjong.private.log.LogService/SaveLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServiceServer).SaveLog(ctx, req.(*SaveLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mahjong.private.log.LogService",
	HandlerType: (*LogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDebugLog",
			Handler:    _LogService_GetDebugLog_Handler,
		},
		{
			MethodName: "SaveLog",
			Handler:    _LogService_SaveLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "private/log/log_service.proto",
}
