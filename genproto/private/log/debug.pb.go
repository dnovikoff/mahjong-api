// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: private/log/debug.proto

package log

import (
	game "github.com/dnovikoff/mahjong-api/genproto/private/game"
	game1 "github.com/dnovikoff/mahjong-api/genproto/public/game"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageSource int32

const (
	MessageSource_SOURCE_TYPE_UNSPECIFIED MessageSource = 0
	// Message produced by robot, replacing the offline player.
	MessageSource_SOURCE_ROBOT MessageSource = 1
	// Message resulted by settings on server side. Ex. AutoWin
	MessageSource_SOURCE_SETTINGS MessageSource = 2
	// Message produced by players action.
	MessageSource_SOURCE_CLIENT MessageSource = 3
	// Message produced by timeout on server side.
	MessageSource_SOURCE_TIMEOUT MessageSource = 4
)

// Enum value maps for MessageSource.
var (
	MessageSource_name = map[int32]string{
		0: "SOURCE_TYPE_UNSPECIFIED",
		1: "SOURCE_ROBOT",
		2: "SOURCE_SETTINGS",
		3: "SOURCE_CLIENT",
		4: "SOURCE_TIMEOUT",
	}
	MessageSource_value = map[string]int32{
		"SOURCE_TYPE_UNSPECIFIED": 0,
		"SOURCE_ROBOT":            1,
		"SOURCE_SETTINGS":         2,
		"SOURCE_CLIENT":           3,
		"SOURCE_TIMEOUT":          4,
	}
)

func (x MessageSource) Enum() *MessageSource {
	p := new(MessageSource)
	*p = x
	return p
}

func (x MessageSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageSource) Descriptor() protoreflect.EnumDescriptor {
	return file_private_log_debug_proto_enumTypes[0].Descriptor()
}

func (MessageSource) Type() protoreflect.EnumType {
	return &file_private_log_debug_proto_enumTypes[0]
}

func (x MessageSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageSource.Descriptor instead.
func (MessageSource) EnumDescriptor() ([]byte, []int) {
	return file_private_log_debug_proto_rawDescGZIP(), []int{0}
}

// Format for storing logs. (Private usage)
type DebugLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Storing information of created request
	Create *game.CreateRequest `protobuf:"bytes,2,opt,name=create,proto3" json:"create,omitempty"`
	// Debug information for investigations
	PlayerMessages []*DebugMessages `protobuf:"bytes,3,rep,name=player_messages,json=playerMessages,proto3" json:"player_messages,omitempty"`
}

func (x *DebugLog) Reset() {
	*x = DebugLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_private_log_debug_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLog) ProtoMessage() {}

func (x *DebugLog) ProtoReflect() protoreflect.Message {
	mi := &file_private_log_debug_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLog.ProtoReflect.Descriptor instead.
func (*DebugLog) Descriptor() ([]byte, []int) {
	return file_private_log_debug_proto_rawDescGZIP(), []int{0}
}

func (x *DebugLog) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DebugLog) GetCreate() *game.CreateRequest {
	if x != nil {
		return x.Create
	}
	return nil
}

func (x *DebugLog) GetPlayerMessages() []*DebugMessages {
	if x != nil {
		return x.PlayerMessages
	}
	return nil
}

type DebugMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*DebugMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *DebugMessages) Reset() {
	*x = DebugMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_private_log_debug_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugMessages) ProtoMessage() {}

func (x *DebugMessages) ProtoReflect() protoreflect.Message {
	mi := &file_private_log_debug_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugMessages.ProtoReflect.Descriptor instead.
func (*DebugMessages) Descriptor() ([]byte, []int) {
	return file_private_log_debug_proto_rawDescGZIP(), []int{1}
}

func (x *DebugMessages) GetMessages() []*DebugMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type DebugMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are assignable to OneofEvents:
	//	*DebugMessage_Client
	//	*DebugMessage_Server
	OneofEvents isDebugMessage_OneofEvents `protobuf_oneof:"oneof_events"`
	Source      MessageSource              `protobuf:"varint,4,opt,name=source,proto3,enum=mahjong.private.log.MessageSource" json:"source,omitempty"`
}

func (x *DebugMessage) Reset() {
	*x = DebugMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_private_log_debug_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugMessage) ProtoMessage() {}

func (x *DebugMessage) ProtoReflect() protoreflect.Message {
	mi := &file_private_log_debug_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugMessage.ProtoReflect.Descriptor instead.
func (*DebugMessage) Descriptor() ([]byte, []int) {
	return file_private_log_debug_proto_rawDescGZIP(), []int{2}
}

func (x *DebugMessage) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (m *DebugMessage) GetOneofEvents() isDebugMessage_OneofEvents {
	if m != nil {
		return m.OneofEvents
	}
	return nil
}

func (x *DebugMessage) GetClient() *game1.Client {
	if x, ok := x.GetOneofEvents().(*DebugMessage_Client); ok {
		return x.Client
	}
	return nil
}

func (x *DebugMessage) GetServer() *game1.Server {
	if x, ok := x.GetOneofEvents().(*DebugMessage_Server); ok {
		return x.Server
	}
	return nil
}

func (x *DebugMessage) GetSource() MessageSource {
	if x != nil {
		return x.Source
	}
	return MessageSource_SOURCE_TYPE_UNSPECIFIED
}

type isDebugMessage_OneofEvents interface {
	isDebugMessage_OneofEvents()
}

type DebugMessage_Client struct {
	Client *game1.Client `protobuf:"bytes,2,opt,name=client,proto3,oneof"`
}

type DebugMessage_Server struct {
	Server *game1.Server `protobuf:"bytes,3,opt,name=server,proto3,oneof"`
}

func (*DebugMessage_Client) isDebugMessage_OneofEvents() {}

func (*DebugMessage_Server) isDebugMessage_OneofEvents() {}

var File_private_log_debug_proto protoreflect.FileDescriptor

var file_private_log_debug_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6d, 0x61, 0x68, 0x6a, 0x6f,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x01, 0x0a, 0x08, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x6f,
	0x67, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x0d, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x2e,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2a, 0x7a, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x4f, 0x42, 0x4f,
	0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x45,
	0x54, 0x54, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x04, 0x42,
	0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6e,
	0x6f, 0x76, 0x69, 0x6b, 0x6f, 0x66, 0x66, 0x2f, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_private_log_debug_proto_rawDescOnce sync.Once
	file_private_log_debug_proto_rawDescData = file_private_log_debug_proto_rawDesc
)

func file_private_log_debug_proto_rawDescGZIP() []byte {
	file_private_log_debug_proto_rawDescOnce.Do(func() {
		file_private_log_debug_proto_rawDescData = protoimpl.X.CompressGZIP(file_private_log_debug_proto_rawDescData)
	})
	return file_private_log_debug_proto_rawDescData
}

var file_private_log_debug_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_private_log_debug_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_private_log_debug_proto_goTypes = []interface{}{
	(MessageSource)(0),          // 0: mahjong.private.log.MessageSource
	(*DebugLog)(nil),            // 1: mahjong.private.log.DebugLog
	(*DebugMessages)(nil),       // 2: mahjong.private.log.DebugMessages
	(*DebugMessage)(nil),        // 3: mahjong.private.log.DebugMessage
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*game.CreateRequest)(nil),  // 5: mahjong.private.game.CreateRequest
	(*game1.Client)(nil),        // 6: mahjong.game.Client
	(*game1.Server)(nil),        // 7: mahjong.game.Server
}
var file_private_log_debug_proto_depIdxs = []int32{
	4, // 0: mahjong.private.log.DebugLog.created_at:type_name -> google.protobuf.Timestamp
	5, // 1: mahjong.private.log.DebugLog.create:type_name -> mahjong.private.game.CreateRequest
	2, // 2: mahjong.private.log.DebugLog.player_messages:type_name -> mahjong.private.log.DebugMessages
	3, // 3: mahjong.private.log.DebugMessages.messages:type_name -> mahjong.private.log.DebugMessage
	4, // 4: mahjong.private.log.DebugMessage.time:type_name -> google.protobuf.Timestamp
	6, // 5: mahjong.private.log.DebugMessage.client:type_name -> mahjong.game.Client
	7, // 6: mahjong.private.log.DebugMessage.server:type_name -> mahjong.game.Server
	0, // 7: mahjong.private.log.DebugMessage.source:type_name -> mahjong.private.log.MessageSource
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_private_log_debug_proto_init() }
func file_private_log_debug_proto_init() {
	if File_private_log_debug_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_private_log_debug_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_private_log_debug_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_private_log_debug_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_private_log_debug_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*DebugMessage_Client)(nil),
		(*DebugMessage_Server)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_private_log_debug_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_private_log_debug_proto_goTypes,
		DependencyIndexes: file_private_log_debug_proto_depIdxs,
		EnumInfos:         file_private_log_debug_proto_enumTypes,
		MessageInfos:      file_private_log_debug_proto_msgTypes,
	}.Build()
	File_private_log_debug_proto = out.File
	file_private_log_debug_proto_rawDesc = nil
	file_private_log_debug_proto_goTypes = nil
	file_private_log_debug_proto_depIdxs = nil
}
