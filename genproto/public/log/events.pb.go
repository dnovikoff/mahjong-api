// Code generated by protoc-gen-go. DO NOT EDIT.
// source: public/log/events.proto

package log

import (
	fmt "fmt"
	base "github.com/dnovikoff/mahjong-api/genproto/public/base"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Furiten int32

const (
	Furiten_FURITEN_UNDEFINED Furiten = 0
	Furiten_FURITEN_NO        Furiten = 1
	Furiten_FURITEN_YES       Furiten = 2
)

var Furiten_name = map[int32]string{
	0: "FURITEN_UNDEFINED",
	1: "FURITEN_NO",
	2: "FURITEN_YES",
}

var Furiten_value = map[string]int32{
	"FURITEN_UNDEFINED": 0,
	"FURITEN_NO":        1,
	"FURITEN_YES":       2,
}

func (x Furiten) String() string {
	return proto.EnumName(Furiten_name, int32(x))
}

func (Furiten) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{0}
}

type Say int32

const (
	Say_SAY_UNSPECIFIED Say = 0
	Say_RIICHI          Say = 1
	Say_RON             Say = 2
	Say_TSUMO           Say = 3
	// kisekuhai.
	Say_DRAW Say = 4
	Say_KAN  Say = 5
	Say_PON  Say = 6
	Say_CHI  Say = 7
	// Probably will be used later.
	Say_TEMPAI Say = 8
	Say_NOTEN  Say = 9
)

var Say_name = map[int32]string{
	0: "SAY_UNSPECIFIED",
	1: "RIICHI",
	2: "RON",
	3: "TSUMO",
	4: "DRAW",
	5: "KAN",
	6: "PON",
	7: "CHI",
	8: "TEMPAI",
	9: "NOTEN",
}

var Say_value = map[string]int32{
	"SAY_UNSPECIFIED": 0,
	"RIICHI":          1,
	"RON":             2,
	"TSUMO":           3,
	"DRAW":            4,
	"KAN":             5,
	"PON":             6,
	"CHI":             7,
	"TEMPAI":          8,
	"NOTEN":           9,
}

func (x Say) String() string {
	return proto.EnumName(Say_name, int32(x))
}

func (Say) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{1}
}

type DrawReason int32

const (
	DrawReason_DRAW_UNSPECIFIED DrawReason = 0
	// Regular draw.
	DrawReason_REGULAR DrawReason = 1
	// Special discared at regular draw.
	DrawReason_NAGASHI DrawReason = 2
	// For winds first drop.
	DrawReason_WINDS DrawReason = 3
	// 9 different koksuhi tiles from start.
	DrawReason_KOKUSHI DrawReason = 4
	// 4 riichi declared.
	DrawReason_RIICHI4 DrawReason = 5
	// Ron from three players at a time.
	DrawReason_RON3 DrawReason = 6
	// For kans by different players declared.
	DrawReason_KAN4 DrawReason = 7
)

var DrawReason_name = map[int32]string{
	0: "DRAW_UNSPECIFIED",
	1: "REGULAR",
	2: "NAGASHI",
	3: "WINDS",
	4: "KOKUSHI",
	5: "RIICHI4",
	6: "RON3",
	7: "KAN4",
}

var DrawReason_value = map[string]int32{
	"DRAW_UNSPECIFIED": 0,
	"REGULAR":          1,
	"NAGASHI":          2,
	"WINDS":            3,
	"KOKUSHI":          4,
	"RIICHI4":          5,
	"RON3":             6,
	"KAN4":             7,
}

func (x DrawReason) String() string {
	return proto.EnumName(DrawReason_name, int32(x))
}

func (DrawReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{2}
}

type PlayerStauts int32

const (
	PlayerStauts_STATUS_UNDEFINED PlayerStauts = 0
	PlayerStauts_OFFLINE          PlayerStauts = 1
	PlayerStauts_ONLINE           PlayerStauts = 2
)

var PlayerStauts_name = map[int32]string{
	0: "STATUS_UNDEFINED",
	1: "OFFLINE",
	2: "ONLINE",
}

var PlayerStauts_value = map[string]int32{
	"STATUS_UNDEFINED": 0,
	"OFFLINE":          1,
	"ONLINE":           2,
}

func (x PlayerStauts) String() string {
	return proto.EnumName(PlayerStauts_name, int32(x))
}

func (PlayerStauts) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{3}
}

type Event struct {
	// Id to be used to point to some event in the game.
	EventId int64                `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Time    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to OneofEvents:
	//	*Event_Take
	//	*Event_Drop
	//	*Event_Changes
	//	*Event_Say
	//	*Event_Declare
	//	*Event_Win
	//	*Event_Draw
	//	*Event_Indicator
	//	*Event_Furiten
	//	*Event_PlayerStatus
	OneofEvents          isEvent_OneofEvents `protobuf_oneof:"oneof_events"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *Event) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type isEvent_OneofEvents interface {
	isEvent_OneofEvents()
}

type Event_Take struct {
	Take *TakeEvent `protobuf:"bytes,3,opt,name=take,proto3,oneof"`
}

type Event_Drop struct {
	Drop *DropEvent `protobuf:"bytes,4,opt,name=drop,proto3,oneof"`
}

type Event_Changes struct {
	Changes *ScoreChangesEvent `protobuf:"bytes,5,opt,name=changes,proto3,oneof"`
}

type Event_Say struct {
	Say *SayEvent `protobuf:"bytes,6,opt,name=say,proto3,oneof"`
}

type Event_Declare struct {
	Declare *DeclareEvent `protobuf:"bytes,7,opt,name=declare,proto3,oneof"`
}

type Event_Win struct {
	Win *WinEvent `protobuf:"bytes,8,opt,name=win,proto3,oneof"`
}

type Event_Draw struct {
	Draw *DrawEvent `protobuf:"bytes,9,opt,name=draw,proto3,oneof"`
}

type Event_Indicator struct {
	Indicator *IndicatorEvent `protobuf:"bytes,10,opt,name=indicator,proto3,oneof"`
}

type Event_Furiten struct {
	Furiten *FuritenEvent `protobuf:"bytes,11,opt,name=furiten,proto3,oneof"`
}

type Event_PlayerStatus struct {
	PlayerStatus *PlayerStatusEvent `protobuf:"bytes,12,opt,name=player_status,json=playerStatus,proto3,oneof"`
}

func (*Event_Take) isEvent_OneofEvents() {}

func (*Event_Drop) isEvent_OneofEvents() {}

func (*Event_Changes) isEvent_OneofEvents() {}

func (*Event_Say) isEvent_OneofEvents() {}

func (*Event_Declare) isEvent_OneofEvents() {}

func (*Event_Win) isEvent_OneofEvents() {}

func (*Event_Draw) isEvent_OneofEvents() {}

func (*Event_Indicator) isEvent_OneofEvents() {}

func (*Event_Furiten) isEvent_OneofEvents() {}

func (*Event_PlayerStatus) isEvent_OneofEvents() {}

func (m *Event) GetOneofEvents() isEvent_OneofEvents {
	if m != nil {
		return m.OneofEvents
	}
	return nil
}

func (m *Event) GetTake() *TakeEvent {
	if x, ok := m.GetOneofEvents().(*Event_Take); ok {
		return x.Take
	}
	return nil
}

func (m *Event) GetDrop() *DropEvent {
	if x, ok := m.GetOneofEvents().(*Event_Drop); ok {
		return x.Drop
	}
	return nil
}

func (m *Event) GetChanges() *ScoreChangesEvent {
	if x, ok := m.GetOneofEvents().(*Event_Changes); ok {
		return x.Changes
	}
	return nil
}

func (m *Event) GetSay() *SayEvent {
	if x, ok := m.GetOneofEvents().(*Event_Say); ok {
		return x.Say
	}
	return nil
}

func (m *Event) GetDeclare() *DeclareEvent {
	if x, ok := m.GetOneofEvents().(*Event_Declare); ok {
		return x.Declare
	}
	return nil
}

func (m *Event) GetWin() *WinEvent {
	if x, ok := m.GetOneofEvents().(*Event_Win); ok {
		return x.Win
	}
	return nil
}

func (m *Event) GetDraw() *DrawEvent {
	if x, ok := m.GetOneofEvents().(*Event_Draw); ok {
		return x.Draw
	}
	return nil
}

func (m *Event) GetIndicator() *IndicatorEvent {
	if x, ok := m.GetOneofEvents().(*Event_Indicator); ok {
		return x.Indicator
	}
	return nil
}

func (m *Event) GetFuriten() *FuritenEvent {
	if x, ok := m.GetOneofEvents().(*Event_Furiten); ok {
		return x.Furiten
	}
	return nil
}

func (m *Event) GetPlayerStatus() *PlayerStatusEvent {
	if x, ok := m.GetOneofEvents().(*Event_PlayerStatus); ok {
		return x.PlayerStatus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_Take)(nil),
		(*Event_Drop)(nil),
		(*Event_Changes)(nil),
		(*Event_Say)(nil),
		(*Event_Declare)(nil),
		(*Event_Win)(nil),
		(*Event_Draw)(nil),
		(*Event_Indicator)(nil),
		(*Event_Furiten)(nil),
		(*Event_PlayerStatus)(nil),
	}
}

type FuritenEvent struct {
	WhoIndex             int64    `protobuf:"varint,1,opt,name=who_index,json=whoIndex,proto3" json:"who_index,omitempty"`
	Furiten              Furiten  `protobuf:"varint,2,opt,name=furiten,proto3,enum=mahjong.log.Furiten" json:"furiten,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FuritenEvent) Reset()         { *m = FuritenEvent{} }
func (m *FuritenEvent) String() string { return proto.CompactTextString(m) }
func (*FuritenEvent) ProtoMessage()    {}
func (*FuritenEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{1}
}

func (m *FuritenEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuritenEvent.Unmarshal(m, b)
}
func (m *FuritenEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuritenEvent.Marshal(b, m, deterministic)
}
func (m *FuritenEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuritenEvent.Merge(m, src)
}
func (m *FuritenEvent) XXX_Size() int {
	return xxx_messageInfo_FuritenEvent.Size(m)
}
func (m *FuritenEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_FuritenEvent.DiscardUnknown(m)
}

var xxx_messageInfo_FuritenEvent proto.InternalMessageInfo

func (m *FuritenEvent) GetWhoIndex() int64 {
	if m != nil {
		return m.WhoIndex
	}
	return 0
}

func (m *FuritenEvent) GetFuriten() Furiten {
	if m != nil {
		return m.Furiten
	}
	return Furiten_FURITEN_UNDEFINED
}

type TakeEvent struct {
	WhoIndex int64 `protobuf:"varint,1,opt,name=who_index,json=whoIndex,proto3" json:"who_index,omitempty"`
	// Not filled in game, when other player takes a tile.
	Instance int64 `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	// Is tile taken from a dead wall.
	DeadWall             bool     `protobuf:"varint,3,opt,name=dead_wall,json=deadWall,proto3" json:"dead_wall,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeEvent) Reset()         { *m = TakeEvent{} }
func (m *TakeEvent) String() string { return proto.CompactTextString(m) }
func (*TakeEvent) ProtoMessage()    {}
func (*TakeEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{2}
}

func (m *TakeEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeEvent.Unmarshal(m, b)
}
func (m *TakeEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeEvent.Marshal(b, m, deterministic)
}
func (m *TakeEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeEvent.Merge(m, src)
}
func (m *TakeEvent) XXX_Size() int {
	return xxx_messageInfo_TakeEvent.Size(m)
}
func (m *TakeEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TakeEvent proto.InternalMessageInfo

func (m *TakeEvent) GetWhoIndex() int64 {
	if m != nil {
		return m.WhoIndex
	}
	return 0
}

func (m *TakeEvent) GetInstance() int64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *TakeEvent) GetDeadWall() bool {
	if m != nil {
		return m.DeadWall
	}
	return false
}

type DropEvent struct {
	WhoIndex  int64 `protobuf:"varint,1,opt,name=who_index,json=whoIndex,proto3" json:"who_index,omitempty"`
	Instance  int64 `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Tsumogiri bool  `protobuf:"varint,3,opt,name=tsumogiri,proto3" json:"tsumogiri,omitempty"`
	Riichi    bool  `protobuf:"varint,4,opt,name=riichi,proto3" json:"riichi,omitempty"`
	// Filled only when tempai.
	// Will be filled only for self, when in game.
	// Will be filled in logs.
	// Not filled for other players in game.
	WaitTiles            int64    `protobuf:"varint,5,opt,name=wait_tiles,json=waitTiles,proto3" json:"wait_tiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropEvent) Reset()         { *m = DropEvent{} }
func (m *DropEvent) String() string { return proto.CompactTextString(m) }
func (*DropEvent) ProtoMessage()    {}
func (*DropEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{3}
}

func (m *DropEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropEvent.Unmarshal(m, b)
}
func (m *DropEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropEvent.Marshal(b, m, deterministic)
}
func (m *DropEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropEvent.Merge(m, src)
}
func (m *DropEvent) XXX_Size() int {
	return xxx_messageInfo_DropEvent.Size(m)
}
func (m *DropEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DropEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DropEvent proto.InternalMessageInfo

func (m *DropEvent) GetWhoIndex() int64 {
	if m != nil {
		return m.WhoIndex
	}
	return 0
}

func (m *DropEvent) GetInstance() int64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *DropEvent) GetTsumogiri() bool {
	if m != nil {
		return m.Tsumogiri
	}
	return false
}

func (m *DropEvent) GetRiichi() bool {
	if m != nil {
		return m.Riichi
	}
	return false
}

func (m *DropEvent) GetWaitTiles() int64 {
	if m != nil {
		return m.WaitTiles
	}
	return 0
}

// Score changed by riichi
type ScoreChangesEvent struct {
	// New number of total riichi sticks on table.
	RiichiCount int64 `protobuf:"varint,1,opt,name=riichi_count,json=riichiCount,proto3" json:"riichi_count,omitempty"`
	// New scores for every player.
	Changes              *Changes `protobuf:"bytes,2,opt,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScoreChangesEvent) Reset()         { *m = ScoreChangesEvent{} }
func (m *ScoreChangesEvent) String() string { return proto.CompactTextString(m) }
func (*ScoreChangesEvent) ProtoMessage()    {}
func (*ScoreChangesEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{4}
}

func (m *ScoreChangesEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScoreChangesEvent.Unmarshal(m, b)
}
func (m *ScoreChangesEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScoreChangesEvent.Marshal(b, m, deterministic)
}
func (m *ScoreChangesEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScoreChangesEvent.Merge(m, src)
}
func (m *ScoreChangesEvent) XXX_Size() int {
	return xxx_messageInfo_ScoreChangesEvent.Size(m)
}
func (m *ScoreChangesEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ScoreChangesEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ScoreChangesEvent proto.InternalMessageInfo

func (m *ScoreChangesEvent) GetRiichiCount() int64 {
	if m != nil {
		return m.RiichiCount
	}
	return 0
}

func (m *ScoreChangesEvent) GetChanges() *Changes {
	if m != nil {
		return m.Changes
	}
	return nil
}

type SayEvent struct {
	WhoIndex             int64    `protobuf:"varint,1,opt,name=who_index,json=whoIndex,proto3" json:"who_index,omitempty"`
	What                 Say      `protobuf:"varint,2,opt,name=what,proto3,enum=mahjong.log.Say" json:"what,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayEvent) Reset()         { *m = SayEvent{} }
func (m *SayEvent) String() string { return proto.CompactTextString(m) }
func (*SayEvent) ProtoMessage()    {}
func (*SayEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{5}
}

func (m *SayEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayEvent.Unmarshal(m, b)
}
func (m *SayEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayEvent.Marshal(b, m, deterministic)
}
func (m *SayEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayEvent.Merge(m, src)
}
func (m *SayEvent) XXX_Size() int {
	return xxx_messageInfo_SayEvent.Size(m)
}
func (m *SayEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SayEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SayEvent proto.InternalMessageInfo

func (m *SayEvent) GetWhoIndex() int64 {
	if m != nil {
		return m.WhoIndex
	}
	return 0
}

func (m *SayEvent) GetWhat() Say {
	if m != nil {
		return m.What
	}
	return Say_SAY_UNSPECIFIED
}

type DeclareEvent struct {
	WhoIndex             int64      `protobuf:"varint,1,opt,name=who_index,json=whoIndex,proto3" json:"who_index,omitempty"`
	Meld                 *base.Meld `protobuf:"bytes,2,opt,name=meld,proto3" json:"meld,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeclareEvent) Reset()         { *m = DeclareEvent{} }
func (m *DeclareEvent) String() string { return proto.CompactTextString(m) }
func (*DeclareEvent) ProtoMessage()    {}
func (*DeclareEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{6}
}

func (m *DeclareEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeclareEvent.Unmarshal(m, b)
}
func (m *DeclareEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeclareEvent.Marshal(b, m, deterministic)
}
func (m *DeclareEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclareEvent.Merge(m, src)
}
func (m *DeclareEvent) XXX_Size() int {
	return xxx_messageInfo_DeclareEvent.Size(m)
}
func (m *DeclareEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclareEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeclareEvent proto.InternalMessageInfo

func (m *DeclareEvent) GetWhoIndex() int64 {
	if m != nil {
		return m.WhoIndex
	}
	return 0
}

func (m *DeclareEvent) GetMeld() *base.Meld {
	if m != nil {
		return m.Meld
	}
	return nil
}

type YakuInfo struct {
	Han                  int64             `protobuf:"varint,1,opt,name=han,proto3" json:"han,omitempty"`
	Fu                   int64             `protobuf:"varint,2,opt,name=fu,proto3" json:"fu,omitempty"`
	Yaku                 []*base.YakuValue `protobuf:"bytes,3,rep,name=yaku,proto3" json:"yaku,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *YakuInfo) Reset()         { *m = YakuInfo{} }
func (m *YakuInfo) String() string { return proto.CompactTextString(m) }
func (*YakuInfo) ProtoMessage()    {}
func (*YakuInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{7}
}

func (m *YakuInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YakuInfo.Unmarshal(m, b)
}
func (m *YakuInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YakuInfo.Marshal(b, m, deterministic)
}
func (m *YakuInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YakuInfo.Merge(m, src)
}
func (m *YakuInfo) XXX_Size() int {
	return xxx_messageInfo_YakuInfo.Size(m)
}
func (m *YakuInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_YakuInfo.DiscardUnknown(m)
}

var xxx_messageInfo_YakuInfo proto.InternalMessageInfo

func (m *YakuInfo) GetHan() int64 {
	if m != nil {
		return m.Han
	}
	return 0
}

func (m *YakuInfo) GetFu() int64 {
	if m != nil {
		return m.Fu
	}
	return 0
}

func (m *YakuInfo) GetYaku() []*base.YakuValue {
	if m != nil {
		return m.Yaku
	}
	return nil
}

type YakumanInfo struct {
	Yakuman              []*base.YakumanValue `protobuf:"bytes,1,rep,name=yakuman,proto3" json:"yakuman,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *YakumanInfo) Reset()         { *m = YakumanInfo{} }
func (m *YakumanInfo) String() string { return proto.CompactTextString(m) }
func (*YakumanInfo) ProtoMessage()    {}
func (*YakumanInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{8}
}

func (m *YakumanInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YakumanInfo.Unmarshal(m, b)
}
func (m *YakumanInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YakumanInfo.Marshal(b, m, deterministic)
}
func (m *YakumanInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YakumanInfo.Merge(m, src)
}
func (m *YakumanInfo) XXX_Size() int {
	return xxx_messageInfo_YakumanInfo.Size(m)
}
func (m *YakumanInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_YakumanInfo.DiscardUnknown(m)
}

var xxx_messageInfo_YakumanInfo proto.InternalMessageInfo

func (m *YakumanInfo) GetYakuman() []*base.YakumanValue {
	if m != nil {
		return m.Yakuman
	}
	return nil
}

type WinEvent struct {
	// If from == who - this is tsumo
	WhoIndex       int64           `protobuf:"varint,1,opt,name=who_index,json=whoIndex,proto3" json:"who_index,omitempty"`
	FromIndex      int64           `protobuf:"varint,2,opt,name=from_index,json=fromIndex,proto3" json:"from_index,omitempty"`
	Instance       int64           `protobuf:"varint,3,opt,name=instance,proto3" json:"instance,omitempty"`
	Hand           *base.Instances `protobuf:"bytes,4,opt,name=hand,proto3" json:"hand,omitempty"`
	Declared       []*base.Meld    `protobuf:"bytes,5,rep,name=declared,proto3" json:"declared,omitempty"`
	DoraIndicators *base.Instances `protobuf:"bytes,6,opt,name=dora_indicators,json=doraIndicators,proto3" json:"dora_indicators,omitempty"`
	UraIndicators  *base.Instances `protobuf:"bytes,7,opt,name=ura_indicators,json=uraIndicators,proto3" json:"ura_indicators,omitempty"`
	Limit          base.Limit      `protobuf:"varint,8,opt,name=limit,proto3,enum=mahjong.base.Limit" json:"limit,omitempty"`
	// Types that are valid to be assigned to OneofWinInfo:
	//	*WinEvent_Yaku
	//	*WinEvent_Yakuman
	OneofWinInfo         isWinEvent_OneofWinInfo `protobuf_oneof:"oneof_win_info"`
	BaseMoney            int64                   `protobuf:"varint,11,opt,name=base_money,json=baseMoney,proto3" json:"base_money,omitempty"`
	Changes              *Changes                `protobuf:"bytes,12,opt,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WinEvent) Reset()         { *m = WinEvent{} }
func (m *WinEvent) String() string { return proto.CompactTextString(m) }
func (*WinEvent) ProtoMessage()    {}
func (*WinEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{9}
}

func (m *WinEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WinEvent.Unmarshal(m, b)
}
func (m *WinEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WinEvent.Marshal(b, m, deterministic)
}
func (m *WinEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WinEvent.Merge(m, src)
}
func (m *WinEvent) XXX_Size() int {
	return xxx_messageInfo_WinEvent.Size(m)
}
func (m *WinEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WinEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WinEvent proto.InternalMessageInfo

func (m *WinEvent) GetWhoIndex() int64 {
	if m != nil {
		return m.WhoIndex
	}
	return 0
}

func (m *WinEvent) GetFromIndex() int64 {
	if m != nil {
		return m.FromIndex
	}
	return 0
}

func (m *WinEvent) GetInstance() int64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *WinEvent) GetHand() *base.Instances {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *WinEvent) GetDeclared() []*base.Meld {
	if m != nil {
		return m.Declared
	}
	return nil
}

func (m *WinEvent) GetDoraIndicators() *base.Instances {
	if m != nil {
		return m.DoraIndicators
	}
	return nil
}

func (m *WinEvent) GetUraIndicators() *base.Instances {
	if m != nil {
		return m.UraIndicators
	}
	return nil
}

func (m *WinEvent) GetLimit() base.Limit {
	if m != nil {
		return m.Limit
	}
	return base.Limit_LIMIT_UNSPECIFIED
}

type isWinEvent_OneofWinInfo interface {
	isWinEvent_OneofWinInfo()
}

type WinEvent_Yaku struct {
	Yaku *YakuInfo `protobuf:"bytes,9,opt,name=yaku,proto3,oneof"`
}

type WinEvent_Yakuman struct {
	Yakuman *YakumanInfo `protobuf:"bytes,10,opt,name=yakuman,proto3,oneof"`
}

func (*WinEvent_Yaku) isWinEvent_OneofWinInfo() {}

func (*WinEvent_Yakuman) isWinEvent_OneofWinInfo() {}

func (m *WinEvent) GetOneofWinInfo() isWinEvent_OneofWinInfo {
	if m != nil {
		return m.OneofWinInfo
	}
	return nil
}

func (m *WinEvent) GetYaku() *YakuInfo {
	if x, ok := m.GetOneofWinInfo().(*WinEvent_Yaku); ok {
		return x.Yaku
	}
	return nil
}

func (m *WinEvent) GetYakuman() *YakumanInfo {
	if x, ok := m.GetOneofWinInfo().(*WinEvent_Yakuman); ok {
		return x.Yakuman
	}
	return nil
}

func (m *WinEvent) GetBaseMoney() int64 {
	if m != nil {
		return m.BaseMoney
	}
	return 0
}

func (m *WinEvent) GetChanges() *Changes {
	if m != nil {
		return m.Changes
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WinEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WinEvent_Yaku)(nil),
		(*WinEvent_Yakuman)(nil),
	}
}

type DrawEvent struct {
	// Visible hands of players.
	// For kusukuhai and tempai.
	Hands                []*base.Instances `protobuf:"bytes,1,rep,name=hands,proto3" json:"hands,omitempty"`
	Reason               DrawReason        `protobuf:"varint,2,opt,name=reason,proto3,enum=mahjong.log.DrawReason" json:"reason,omitempty"`
	Changes              *Changes          `protobuf:"bytes,3,opt,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DrawEvent) Reset()         { *m = DrawEvent{} }
func (m *DrawEvent) String() string { return proto.CompactTextString(m) }
func (*DrawEvent) ProtoMessage()    {}
func (*DrawEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{10}
}

func (m *DrawEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrawEvent.Unmarshal(m, b)
}
func (m *DrawEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrawEvent.Marshal(b, m, deterministic)
}
func (m *DrawEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrawEvent.Merge(m, src)
}
func (m *DrawEvent) XXX_Size() int {
	return xxx_messageInfo_DrawEvent.Size(m)
}
func (m *DrawEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DrawEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DrawEvent proto.InternalMessageInfo

func (m *DrawEvent) GetHands() []*base.Instances {
	if m != nil {
		return m.Hands
	}
	return nil
}

func (m *DrawEvent) GetReason() DrawReason {
	if m != nil {
		return m.Reason
	}
	return DrawReason_DRAW_UNSPECIFIED
}

func (m *DrawEvent) GetChanges() *Changes {
	if m != nil {
		return m.Changes
	}
	return nil
}

type PlayerStatusEvent struct {
	WhoIndex             int64        `protobuf:"varint,1,opt,name=who_index,json=whoIndex,proto3" json:"who_index,omitempty"`
	Status               PlayerStauts `protobuf:"varint,2,opt,name=status,proto3,enum=mahjong.log.PlayerStauts" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PlayerStatusEvent) Reset()         { *m = PlayerStatusEvent{} }
func (m *PlayerStatusEvent) String() string { return proto.CompactTextString(m) }
func (*PlayerStatusEvent) ProtoMessage()    {}
func (*PlayerStatusEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{11}
}

func (m *PlayerStatusEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerStatusEvent.Unmarshal(m, b)
}
func (m *PlayerStatusEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerStatusEvent.Marshal(b, m, deterministic)
}
func (m *PlayerStatusEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStatusEvent.Merge(m, src)
}
func (m *PlayerStatusEvent) XXX_Size() int {
	return xxx_messageInfo_PlayerStatusEvent.Size(m)
}
func (m *PlayerStatusEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStatusEvent.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStatusEvent proto.InternalMessageInfo

func (m *PlayerStatusEvent) GetWhoIndex() int64 {
	if m != nil {
		return m.WhoIndex
	}
	return 0
}

func (m *PlayerStatusEvent) GetStatus() PlayerStauts {
	if m != nil {
		return m.Status
	}
	return PlayerStauts_STATUS_UNDEFINED
}

type IndicatorEvent struct {
	Instance             int64    `protobuf:"varint,1,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndicatorEvent) Reset()         { *m = IndicatorEvent{} }
func (m *IndicatorEvent) String() string { return proto.CompactTextString(m) }
func (*IndicatorEvent) ProtoMessage()    {}
func (*IndicatorEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_be058f170a337293, []int{12}
}

func (m *IndicatorEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndicatorEvent.Unmarshal(m, b)
}
func (m *IndicatorEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndicatorEvent.Marshal(b, m, deterministic)
}
func (m *IndicatorEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndicatorEvent.Merge(m, src)
}
func (m *IndicatorEvent) XXX_Size() int {
	return xxx_messageInfo_IndicatorEvent.Size(m)
}
func (m *IndicatorEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_IndicatorEvent.DiscardUnknown(m)
}

var xxx_messageInfo_IndicatorEvent proto.InternalMessageInfo

func (m *IndicatorEvent) GetInstance() int64 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func init() {
	proto.RegisterEnum("mahjong.log.Furiten", Furiten_name, Furiten_value)
	proto.RegisterEnum("mahjong.log.Say", Say_name, Say_value)
	proto.RegisterEnum("mahjong.log.DrawReason", DrawReason_name, DrawReason_value)
	proto.RegisterEnum("mahjong.log.PlayerStauts", PlayerStauts_name, PlayerStauts_value)
	proto.RegisterType((*Event)(nil), "mahjong.log.Event")
	proto.RegisterType((*FuritenEvent)(nil), "mahjong.log.FuritenEvent")
	proto.RegisterType((*TakeEvent)(nil), "mahjong.log.TakeEvent")
	proto.RegisterType((*DropEvent)(nil), "mahjong.log.DropEvent")
	proto.RegisterType((*ScoreChangesEvent)(nil), "mahjong.log.ScoreChangesEvent")
	proto.RegisterType((*SayEvent)(nil), "mahjong.log.SayEvent")
	proto.RegisterType((*DeclareEvent)(nil), "mahjong.log.DeclareEvent")
	proto.RegisterType((*YakuInfo)(nil), "mahjong.log.YakuInfo")
	proto.RegisterType((*YakumanInfo)(nil), "mahjong.log.YakumanInfo")
	proto.RegisterType((*WinEvent)(nil), "mahjong.log.WinEvent")
	proto.RegisterType((*DrawEvent)(nil), "mahjong.log.DrawEvent")
	proto.RegisterType((*PlayerStatusEvent)(nil), "mahjong.log.PlayerStatusEvent")
	proto.RegisterType((*IndicatorEvent)(nil), "mahjong.log.IndicatorEvent")
}

func init() { proto.RegisterFile("public/log/events.proto", fileDescriptor_be058f170a337293) }

var fileDescriptor_be058f170a337293 = []byte{
	// 1215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xd9, 0x6e, 0xdb, 0x46,
	0x17, 0x8e, 0x4c, 0x2d, 0xd4, 0x91, 0xa2, 0x30, 0x93, 0x8d, 0x71, 0xfe, 0xfc, 0x4d, 0x89, 0xa2,
	0x48, 0x9c, 0x44, 0x42, 0x1d, 0xb7, 0x17, 0x2d, 0x5a, 0x54, 0xb1, 0xe5, 0x84, 0x70, 0x4c, 0x19,
	0xa4, 0x54, 0xc3, 0xed, 0x05, 0x31, 0x16, 0x29, 0x69, 0x6a, 0x72, 0x46, 0xe0, 0x12, 0x55, 0x8f,
	0x52, 0xf4, 0x25, 0xfa, 0x68, 0x7d, 0x84, 0x62, 0x86, 0x43, 0x5a, 0xb4, 0x15, 0x23, 0xe8, 0x8d,
	0xc0, 0x39, 0xe7, 0xfb, 0xce, 0x32, 0x67, 0x19, 0xc1, 0xa3, 0x45, 0x7a, 0x1e, 0x90, 0x49, 0x2f,
	0x60, 0xb3, 0x9e, 0xff, 0xd1, 0xa7, 0x49, 0xdc, 0x5d, 0x44, 0x2c, 0x61, 0xa8, 0x15, 0xe2, 0xf9,
	0xef, 0x8c, 0xce, 0xba, 0x01, 0x9b, 0x6d, 0x7f, 0x31, 0x63, 0x6c, 0x16, 0xf8, 0x3d, 0xa1, 0x3a,
	0x4f, 0xa7, 0xbd, 0x84, 0x84, 0x7e, 0x9c, 0xe0, 0x70, 0x91, 0xa1, 0xb7, 0x1f, 0x4a, 0x33, 0xe7,
	0x38, 0xf6, 0xc5, 0xcf, 0x26, 0xf9, 0x0a, 0x5f, 0xa4, 0x52, 0xbe, 0xee, 0x76, 0xc2, 0xc2, 0x90,
	0xd1, 0x4c, 0x61, 0xfc, 0x53, 0x85, 0xda, 0x80, 0xc7, 0x81, 0x1e, 0x83, 0x2a, 0x02, 0x72, 0x89,
	0xa7, 0x57, 0x9e, 0x55, 0x9e, 0x2b, 0x76, 0x43, 0x9c, 0x4d, 0x0f, 0x75, 0xa1, 0xca, 0x03, 0xd0,
	0xb7, 0x9e, 0x55, 0x9e, 0xb7, 0x76, 0xb7, 0xbb, 0x59, 0x74, 0xdd, 0x3c, 0xba, 0xee, 0x28, 0x8f,
	0xce, 0x16, 0x38, 0xf4, 0x0a, 0xaa, 0x09, 0xbe, 0xf0, 0x75, 0x45, 0xe0, 0x1f, 0x76, 0xd7, 0x52,
	0xeb, 0x8e, 0xf0, 0x85, 0x2f, 0x1c, 0xbe, 0xbf, 0x65, 0x0b, 0x14, 0x47, 0x7b, 0x11, 0x5b, 0xe8,
	0xd5, 0x0d, 0xe8, 0x83, 0x88, 0x2d, 0x0a, 0x34, 0x47, 0xa1, 0xef, 0xa1, 0x31, 0x99, 0x63, 0x3a,
	0xf3, 0x63, 0xbd, 0x26, 0x08, 0xff, 0x2f, 0x11, 0x9c, 0x09, 0x8b, 0xfc, 0xfd, 0x0c, 0x90, 0x13,
	0x73, 0x02, 0x7a, 0x01, 0x4a, 0x8c, 0x57, 0x7a, 0x5d, 0xf0, 0x1e, 0x94, 0x79, 0x78, 0x95, 0xc3,
	0x39, 0x06, 0x7d, 0x0b, 0x0d, 0xcf, 0x9f, 0x04, 0x38, 0xf2, 0xf5, 0x86, 0x80, 0x3f, 0x2e, 0xc7,
	0x95, 0xe9, 0x0a, 0x0f, 0x12, 0xcb, 0x3d, 0x2c, 0x09, 0xd5, 0xd5, 0x0d, 0x1e, 0x4e, 0x09, 0x2d,
	0x3c, 0x2c, 0x09, 0xcd, 0xd2, 0xc6, 0x4b, 0xbd, 0xb9, 0x31, 0x6d, 0xbc, 0x5c, 0x4b, 0x1b, 0x2f,
	0xd1, 0x0f, 0xd0, 0x24, 0xd4, 0x23, 0x13, 0x9c, 0xb0, 0x48, 0x07, 0x41, 0x79, 0x52, 0xa2, 0x98,
	0xb9, 0x36, 0xe7, 0x5d, 0xe2, 0x79, 0x32, 0xd3, 0x34, 0x22, 0x89, 0x4f, 0xf5, 0xd6, 0x86, 0x64,
	0x0e, 0x33, 0x5d, 0x91, 0x8c, 0xc4, 0xa2, 0x01, 0xdc, 0x5e, 0x04, 0x78, 0xe5, 0x47, 0x6e, 0x9c,
	0xe0, 0x24, 0x8d, 0xf5, 0xf6, 0x86, 0x0b, 0x3f, 0x11, 0x08, 0x47, 0x00, 0x72, 0x0b, 0xed, 0xc5,
	0x9a, 0xf0, 0x6d, 0x07, 0xda, 0x8c, 0xfa, 0x6c, 0xea, 0x66, 0xfd, 0x6e, 0xfc, 0x06, 0xed, 0x75,
	0x8f, 0xe8, 0x09, 0x34, 0x97, 0x73, 0xe6, 0x12, 0xea, 0xf9, 0x7f, 0xc8, 0xce, 0x53, 0x97, 0x73,
	0x66, 0xf2, 0x33, 0xea, 0x5e, 0x86, 0xce, 0xbb, 0xaf, 0xb3, 0x7b, 0x7f, 0x53, 0xe8, 0x45, 0xcc,
	0x06, 0x86, 0x66, 0xd1, 0x61, 0x37, 0x5b, 0xde, 0x06, 0x95, 0xd0, 0x38, 0xc1, 0x74, 0x92, 0x35,
	0xb6, 0x62, 0x17, 0x67, 0x4e, 0xf4, 0x7c, 0xec, 0xb9, 0x4b, 0x1c, 0x04, 0xa2, 0x8b, 0x55, 0x5b,
	0xe5, 0x82, 0x53, 0x1c, 0x04, 0xc6, 0x9f, 0x15, 0x68, 0x16, 0x7d, 0xf9, 0xdf, 0x7d, 0xfc, 0x0f,
	0x9a, 0x49, 0x9c, 0x86, 0x6c, 0x46, 0x22, 0x22, 0x7d, 0x5c, 0x0a, 0xd0, 0x43, 0xa8, 0x47, 0x84,
	0x4c, 0xe6, 0x44, 0x8c, 0x85, 0x6a, 0xcb, 0x13, 0x7a, 0x0a, 0xb0, 0xc4, 0x24, 0x71, 0x13, 0x12,
	0xc8, 0x09, 0x50, 0xec, 0x26, 0x97, 0x8c, 0xb8, 0xc0, 0x98, 0xc2, 0xdd, 0x6b, 0x13, 0x80, 0xbe,
	0x84, 0x76, 0xc6, 0x76, 0x27, 0x2c, 0xa5, 0x89, 0x8c, 0xb2, 0x95, 0xc9, 0xf6, 0xb9, 0x88, 0x5f,
	0x73, 0x3e, 0x55, 0xd9, 0x90, 0x97, 0xaf, 0x59, 0x9a, 0x2b, 0x26, 0xc9, 0x38, 0x06, 0x35, 0x9f,
	0x98, 0x9b, 0x6f, 0xe0, 0x2b, 0xa8, 0x2e, 0xe7, 0x38, 0x91, 0xc5, 0xd3, 0xae, 0xce, 0x9c, 0x2d,
	0xb4, 0x86, 0x03, 0xed, 0xf5, 0x89, 0xba, 0xd9, 0xe4, 0xd7, 0x50, 0x0d, 0xfd, 0xc0, 0x93, 0x81,
	0xa2, 0xc2, 0xa4, 0x58, 0x83, 0xc7, 0x7e, 0xe0, 0xd9, 0x42, 0x6f, 0x9c, 0x81, 0x7a, 0x86, 0x2f,
	0x52, 0x93, 0x4e, 0x19, 0xd2, 0x40, 0x99, 0x63, 0x2a, 0x4d, 0xf1, 0x4f, 0xd4, 0x81, 0xad, 0x69,
	0x2a, 0x8b, 0xb2, 0x35, 0x4d, 0xd1, 0x4b, 0xa8, 0xf2, 0x7d, 0xa9, 0x2b, 0xcf, 0x94, 0xe7, 0xad,
	0xdd, 0x47, 0x65, 0xab, 0xdc, 0xce, 0x2f, 0x38, 0x48, 0x7d, 0x5b, 0x80, 0x8c, 0x7d, 0x68, 0x71,
	0x51, 0x88, 0xa9, 0xb0, 0xbe, 0x07, 0x8d, 0x55, 0x76, 0xd4, 0x2b, 0x82, 0xbe, 0x7d, 0x9d, 0x1e,
	0x62, 0x9a, 0x59, 0xc8, 0xa1, 0xc6, 0xdf, 0x55, 0x50, 0xf3, 0xa5, 0x70, 0x73, 0xc6, 0x4f, 0x01,
	0xa6, 0x11, 0x0b, 0xa5, 0x36, 0x8b, 0xb9, 0xc9, 0x25, 0xd7, 0xbb, 0x4c, 0xb9, 0xd2, 0x65, 0x2f,
	0xa1, 0x3a, 0xc7, 0xd4, 0x93, 0xcb, 0xf5, 0x4a, 0x5a, 0xa6, 0x44, 0xc5, 0xb6, 0x00, 0xa1, 0x2e,
	0xa8, 0x72, 0x91, 0x79, 0x7a, 0x4d, 0x24, 0xb2, 0xe9, 0x76, 0x0b, 0x0c, 0xfa, 0x19, 0xee, 0x78,
	0x2c, 0xc2, 0x6e, 0xb1, 0x69, 0x62, 0xb9, 0x5b, 0x3f, 0xe9, 0xa7, 0xc3, 0xf1, 0xc5, 0xaa, 0x8a,
	0xd1, 0x4f, 0xd0, 0x49, 0xcb, 0x06, 0x1a, 0x37, 0x1b, 0xb8, 0x9d, 0x96, 0xf8, 0x2f, 0xa0, 0x16,
	0x90, 0x90, 0x24, 0x62, 0xe3, 0x76, 0x76, 0xef, 0x95, 0x69, 0x1f, 0xb8, 0xca, 0xce, 0x10, 0x45,
	0x81, 0x9b, 0x1b, 0x76, 0x73, 0xde, 0x27, 0x7c, 0xdd, 0x72, 0xd0, 0x7a, 0x45, 0xb3, 0x65, 0xab,
	0x5f, 0xc3, 0xcb, 0xe2, 0xf3, 0x85, 0x29, 0xa1, 0xbc, 0x4e, 0xdc, 0xaf, 0x1b, 0x32, 0xea, 0xaf,
	0xc4, 0xaa, 0x55, 0xec, 0x26, 0x97, 0x1c, 0x73, 0xc1, 0xfa, 0x90, 0xb5, 0x3f, 0x63, 0xc8, 0xde,
	0x6a, 0xd0, 0xc9, 0x16, 0xe7, 0x92, 0x50, 0x97, 0xd0, 0x29, 0x33, 0xfe, 0x12, 0xab, 0x47, 0xbe,
	0x0d, 0xe8, 0x35, 0xd4, 0x78, 0xd9, 0x62, 0xd9, 0x74, 0x9f, 0xbc, 0xb3, 0x0c, 0x85, 0x7a, 0x50,
	0x8f, 0x7c, 0x1c, 0xb3, 0x7c, 0x93, 0x3e, 0xba, 0xf6, 0xe4, 0xd8, 0x42, 0x6d, 0x4b, 0xd8, 0x7a,
	0xbc, 0xca, 0xe7, 0x2c, 0x85, 0x09, 0xdc, 0xbd, 0xf6, 0x1a, 0xdc, 0xdc, 0xd8, 0xdf, 0x40, 0x5d,
	0x3e, 0x2d, 0x59, 0x48, 0x8f, 0x37, 0x3f, 0x2d, 0x69, 0x12, 0xdb, 0x12, 0x68, 0xbc, 0x82, 0x4e,
	0xf9, 0xa9, 0x2b, 0xb5, 0x7f, 0xa5, 0xdc, 0xfe, 0x3b, 0x7d, 0x68, 0xc8, 0x27, 0x02, 0x3d, 0x80,
	0xbb, 0x87, 0x63, 0xdb, 0x1c, 0x0d, 0x2c, 0x77, 0x6c, 0x1d, 0x0c, 0x0e, 0x4d, 0x6b, 0x70, 0xa0,
	0xdd, 0x42, 0x1d, 0x80, 0x5c, 0x6c, 0x0d, 0xb5, 0x0a, 0xba, 0x03, 0xad, 0xfc, 0x7c, 0x36, 0x70,
	0xb4, 0xad, 0x9d, 0x8f, 0xa0, 0x38, 0x78, 0x85, 0xee, 0xc1, 0x1d, 0xa7, 0x7f, 0xe6, 0x8e, 0x2d,
	0xe7, 0x64, 0xb0, 0x6f, 0x1e, 0x9a, 0x82, 0x0c, 0x50, 0xb7, 0x4d, 0x73, 0xff, 0xbd, 0xa9, 0x55,
	0x50, 0x03, 0x14, 0x7b, 0x68, 0x69, 0x5b, 0xa8, 0x09, 0xb5, 0x91, 0x33, 0x3e, 0x1e, 0x6a, 0x0a,
	0x52, 0xa1, 0x7a, 0x60, 0xf7, 0x4f, 0xb5, 0x2a, 0xd7, 0x1e, 0xf5, 0x2d, 0xad, 0xc6, 0x3f, 0x4e,
	0x86, 0x96, 0x56, 0xe7, 0x1f, 0x9c, 0xd8, 0xe0, 0x46, 0x46, 0x83, 0xe3, 0x93, 0xbe, 0xa9, 0xa9,
	0x9c, 0x6b, 0x0d, 0x47, 0x03, 0x4b, 0x6b, 0xee, 0xa4, 0x00, 0x97, 0x35, 0x41, 0xf7, 0x41, 0xe3,
	0x96, 0xae, 0xf8, 0x6f, 0x41, 0xc3, 0x1e, 0xbc, 0x1b, 0x7f, 0xe8, 0xdb, 0x5a, 0x85, 0x1f, 0xac,
	0xfe, 0xbb, 0xbe, 0xf3, 0xde, 0xcc, 0x82, 0x38, 0x35, 0xad, 0x03, 0x47, 0x53, 0xb8, 0xfc, 0x68,
	0x78, 0x34, 0xe6, 0xf2, 0xaa, 0x60, 0x88, 0x88, 0xf7, 0xb4, 0x1a, 0x0f, 0xcf, 0x1e, 0x5a, 0x6f,
	0xb4, 0x3a, 0xff, 0x3a, 0xea, 0x5b, 0x7b, 0x5a, 0x63, 0xe7, 0x47, 0x68, 0xaf, 0xdf, 0x3b, 0x77,
	0xec, 0x8c, 0xfa, 0xa3, 0xb1, 0x53, 0xba, 0xb5, 0x16, 0x34, 0x86, 0x87, 0x87, 0x1f, 0x4c, 0x6b,
	0xa0, 0x55, 0x78, 0x02, 0x43, 0x4b, 0x7c, 0x6f, 0xbd, 0xfd, 0xee, 0xd7, 0xbd, 0x19, 0x49, 0xe6,
	0xe9, 0x79, 0x77, 0xc2, 0xc2, 0x9e, 0x47, 0xd9, 0x47, 0x72, 0xc1, 0xa6, 0xd3, 0x9e, 0xac, 0xeb,
	0x6b, 0xbc, 0x20, 0xbd, 0x99, 0x4f, 0xc5, 0x5f, 0xc7, 0xde, 0xe5, 0x9f, 0xd2, 0xf3, 0xba, 0x90,
	0xbc, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x28, 0x26, 0x46, 0x20, 0x0b, 0x00, 0x00,
}
