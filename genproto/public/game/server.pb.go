// Code generated by protoc-gen-go. DO NOT EDIT.
// source: public/game/server.proto

package game

import (
	fmt "fmt"
	base "github.com/dnovikoff/mahjong-api/genproto/public/base"
	log "github.com/dnovikoff/mahjong-api/genproto/public/log"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Server initiated message
type Server struct {
	// If server message contains suggset, the client is expected
	// to answer with Client message, with same "suggest_id" set.
	// The exception is when suggest.canceled = true. With such message
	// server tells that on of previous messages (selected by suggest_id) is
	// out of date (ex. by timeout) and the response is no longer expected.
	Suggest *Suggest `protobuf:"bytes,1,opt,name=suggest,proto3" json:"suggest,omitempty"`
	// Types that are valid to be assigned to OneofEvents:
	//	*Server_Take
	//	*Server_Drop
	//	*Server_Changes
	//	*Server_Say
	//	*Server_Declare
	//	*Server_Win
	//	*Server_Draw
	//	*Server_Indicator
	//	*Server_RoundStart
	//	*Server_GameStart
	//	*Server_GameEnd
	//	*Server_Furiten
	//	*Server_Recover
	//	*Server_PlayerStatus
	//	*Server_Settings
	OneofEvents          isServer_OneofEvents `protobuf_oneof:"oneof_events"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_6293c9cc04331e8d, []int{0}
}

func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetSuggest() *Suggest {
	if m != nil {
		return m.Suggest
	}
	return nil
}

type isServer_OneofEvents interface {
	isServer_OneofEvents()
}

type Server_Take struct {
	Take *log.TakeEvent `protobuf:"bytes,3,opt,name=take,proto3,oneof"`
}

type Server_Drop struct {
	Drop *log.DropEvent `protobuf:"bytes,4,opt,name=drop,proto3,oneof"`
}

type Server_Changes struct {
	Changes *log.ScoreChangesEvent `protobuf:"bytes,5,opt,name=changes,proto3,oneof"`
}

type Server_Say struct {
	Say *log.SayEvent `protobuf:"bytes,6,opt,name=say,proto3,oneof"`
}

type Server_Declare struct {
	Declare *log.DeclareEvent `protobuf:"bytes,7,opt,name=declare,proto3,oneof"`
}

type Server_Win struct {
	Win *log.WinEvent `protobuf:"bytes,8,opt,name=win,proto3,oneof"`
}

type Server_Draw struct {
	Draw *log.DrawEvent `protobuf:"bytes,9,opt,name=draw,proto3,oneof"`
}

type Server_Indicator struct {
	Indicator *log.IndicatorEvent `protobuf:"bytes,10,opt,name=indicator,proto3,oneof"`
}

type Server_RoundStart struct {
	RoundStart *log.RoundInfo `protobuf:"bytes,11,opt,name=round_start,json=roundStart,proto3,oneof"`
}

type Server_GameStart struct {
	GameStart *GameStartEvent `protobuf:"bytes,12,opt,name=game_start,json=gameStart,proto3,oneof"`
}

type Server_GameEnd struct {
	GameEnd *GameEndEvent `protobuf:"bytes,13,opt,name=game_end,json=gameEnd,proto3,oneof"`
}

type Server_Furiten struct {
	Furiten log.Furiten `protobuf:"varint,14,opt,name=furiten,proto3,enum=mahjong.log.Furiten,oneof"`
}

type Server_Recover struct {
	Recover *RoundRecover `protobuf:"bytes,15,opt,name=recover,proto3,oneof"`
}

type Server_PlayerStatus struct {
	PlayerStatus *log.PlayerStatusEvent `protobuf:"bytes,16,opt,name=player_status,json=playerStatus,proto3,oneof"`
}

type Server_Settings struct {
	Settings *Settings `protobuf:"bytes,17,opt,name=settings,proto3,oneof"`
}

func (*Server_Take) isServer_OneofEvents() {}

func (*Server_Drop) isServer_OneofEvents() {}

func (*Server_Changes) isServer_OneofEvents() {}

func (*Server_Say) isServer_OneofEvents() {}

func (*Server_Declare) isServer_OneofEvents() {}

func (*Server_Win) isServer_OneofEvents() {}

func (*Server_Draw) isServer_OneofEvents() {}

func (*Server_Indicator) isServer_OneofEvents() {}

func (*Server_RoundStart) isServer_OneofEvents() {}

func (*Server_GameStart) isServer_OneofEvents() {}

func (*Server_GameEnd) isServer_OneofEvents() {}

func (*Server_Furiten) isServer_OneofEvents() {}

func (*Server_Recover) isServer_OneofEvents() {}

func (*Server_PlayerStatus) isServer_OneofEvents() {}

func (*Server_Settings) isServer_OneofEvents() {}

func (m *Server) GetOneofEvents() isServer_OneofEvents {
	if m != nil {
		return m.OneofEvents
	}
	return nil
}

func (m *Server) GetTake() *log.TakeEvent {
	if x, ok := m.GetOneofEvents().(*Server_Take); ok {
		return x.Take
	}
	return nil
}

func (m *Server) GetDrop() *log.DropEvent {
	if x, ok := m.GetOneofEvents().(*Server_Drop); ok {
		return x.Drop
	}
	return nil
}

func (m *Server) GetChanges() *log.ScoreChangesEvent {
	if x, ok := m.GetOneofEvents().(*Server_Changes); ok {
		return x.Changes
	}
	return nil
}

func (m *Server) GetSay() *log.SayEvent {
	if x, ok := m.GetOneofEvents().(*Server_Say); ok {
		return x.Say
	}
	return nil
}

func (m *Server) GetDeclare() *log.DeclareEvent {
	if x, ok := m.GetOneofEvents().(*Server_Declare); ok {
		return x.Declare
	}
	return nil
}

func (m *Server) GetWin() *log.WinEvent {
	if x, ok := m.GetOneofEvents().(*Server_Win); ok {
		return x.Win
	}
	return nil
}

func (m *Server) GetDraw() *log.DrawEvent {
	if x, ok := m.GetOneofEvents().(*Server_Draw); ok {
		return x.Draw
	}
	return nil
}

func (m *Server) GetIndicator() *log.IndicatorEvent {
	if x, ok := m.GetOneofEvents().(*Server_Indicator); ok {
		return x.Indicator
	}
	return nil
}

func (m *Server) GetRoundStart() *log.RoundInfo {
	if x, ok := m.GetOneofEvents().(*Server_RoundStart); ok {
		return x.RoundStart
	}
	return nil
}

func (m *Server) GetGameStart() *GameStartEvent {
	if x, ok := m.GetOneofEvents().(*Server_GameStart); ok {
		return x.GameStart
	}
	return nil
}

func (m *Server) GetGameEnd() *GameEndEvent {
	if x, ok := m.GetOneofEvents().(*Server_GameEnd); ok {
		return x.GameEnd
	}
	return nil
}

func (m *Server) GetFuriten() log.Furiten {
	if x, ok := m.GetOneofEvents().(*Server_Furiten); ok {
		return x.Furiten
	}
	return log.Furiten_FURITEN_UNDEFINED
}

func (m *Server) GetRecover() *RoundRecover {
	if x, ok := m.GetOneofEvents().(*Server_Recover); ok {
		return x.Recover
	}
	return nil
}

func (m *Server) GetPlayerStatus() *log.PlayerStatusEvent {
	if x, ok := m.GetOneofEvents().(*Server_PlayerStatus); ok {
		return x.PlayerStatus
	}
	return nil
}

func (m *Server) GetSettings() *Settings {
	if x, ok := m.GetOneofEvents().(*Server_Settings); ok {
		return x.Settings
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Server) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Server_Take)(nil),
		(*Server_Drop)(nil),
		(*Server_Changes)(nil),
		(*Server_Say)(nil),
		(*Server_Declare)(nil),
		(*Server_Win)(nil),
		(*Server_Draw)(nil),
		(*Server_Indicator)(nil),
		(*Server_RoundStart)(nil),
		(*Server_GameStart)(nil),
		(*Server_GameEnd)(nil),
		(*Server_Furiten)(nil),
		(*Server_Recover)(nil),
		(*Server_PlayerStatus)(nil),
		(*Server_Settings)(nil),
	}
}

// Send after reconnect
type RoundRecover struct {
	Events               []*Server `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RoundRecover) Reset()         { *m = RoundRecover{} }
func (m *RoundRecover) String() string { return proto.CompactTextString(m) }
func (*RoundRecover) ProtoMessage()    {}
func (*RoundRecover) Descriptor() ([]byte, []int) {
	return fileDescriptor_6293c9cc04331e8d, []int{1}
}

func (m *RoundRecover) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundRecover.Unmarshal(m, b)
}
func (m *RoundRecover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundRecover.Marshal(b, m, deterministic)
}
func (m *RoundRecover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundRecover.Merge(m, src)
}
func (m *RoundRecover) XXX_Size() int {
	return xxx_messageInfo_RoundRecover.Size(m)
}
func (m *RoundRecover) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundRecover.DiscardUnknown(m)
}

var xxx_messageInfo_RoundRecover proto.InternalMessageInfo

func (m *RoundRecover) GetEvents() []*Server {
	if m != nil {
		return m.Events
	}
	return nil
}

// Final screen
type GameEndEvent struct {
	Changes              *log.Changes      `protobuf:"bytes,1,opt,name=changes,proto3" json:"changes,omitempty"`
	EndReason            log.GameEndReason `protobuf:"varint,2,opt,name=end_reason,json=endReason,proto3,enum=mahjong.log.GameEndReason" json:"end_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GameEndEvent) Reset()         { *m = GameEndEvent{} }
func (m *GameEndEvent) String() string { return proto.CompactTextString(m) }
func (*GameEndEvent) ProtoMessage()    {}
func (*GameEndEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_6293c9cc04331e8d, []int{2}
}

func (m *GameEndEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameEndEvent.Unmarshal(m, b)
}
func (m *GameEndEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameEndEvent.Marshal(b, m, deterministic)
}
func (m *GameEndEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameEndEvent.Merge(m, src)
}
func (m *GameEndEvent) XXX_Size() int {
	return xxx_messageInfo_GameEndEvent.Size(m)
}
func (m *GameEndEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GameEndEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GameEndEvent proto.InternalMessageInfo

func (m *GameEndEvent) GetChanges() *log.Changes {
	if m != nil {
		return m.Changes
	}
	return nil
}

func (m *GameEndEvent) GetEndReason() log.GameEndReason {
	if m != nil {
		return m.EndReason
	}
	return log.GameEndReason_GAME_END_REASON_UNSPECIFIED
}

type GameStartEvent struct {
	ClientIndex          int64         `protobuf:"varint,1,opt,name=client_index,json=clientIndex,proto3" json:"client_index,omitempty"`
	Info                 *log.GameInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GameStartEvent) Reset()         { *m = GameStartEvent{} }
func (m *GameStartEvent) String() string { return proto.CompactTextString(m) }
func (*GameStartEvent) ProtoMessage()    {}
func (*GameStartEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_6293c9cc04331e8d, []int{3}
}

func (m *GameStartEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStartEvent.Unmarshal(m, b)
}
func (m *GameStartEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStartEvent.Marshal(b, m, deterministic)
}
func (m *GameStartEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStartEvent.Merge(m, src)
}
func (m *GameStartEvent) XXX_Size() int {
	return xxx_messageInfo_GameStartEvent.Size(m)
}
func (m *GameStartEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStartEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GameStartEvent proto.InternalMessageInfo

func (m *GameStartEvent) GetClientIndex() int64 {
	if m != nil {
		return m.ClientIndex
	}
	return 0
}

func (m *GameStartEvent) GetInfo() *log.GameInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type Suggest struct {
	// Should response with this id
	SuggestId        int64           `protobuf:"varint,1,opt,name=suggest_id,json=suggestId,proto3" json:"suggest_id,omitempty"`
	Pon              bool            `protobuf:"varint,2,opt,name=pon,proto3" json:"pon,omitempty"`
	Kan              bool            `protobuf:"varint,3,opt,name=kan,proto3" json:"kan,omitempty"`
	ClosedKanMask    int64           `protobuf:"varint,4,opt,name=closed_kan_mask,json=closedKanMask,proto3" json:"closed_kan_mask,omitempty"`
	UpgradeInstances *base.Instances `protobuf:"bytes,5,opt,name=upgrade_instances,json=upgradeInstances,proto3" json:"upgrade_instances,omitempty"`
	// 1+23
	ChiLeft bool `protobuf:"varint,6,opt,name=chi_left,json=chiLeft,proto3" json:"chi_left,omitempty"`
	// 2+13
	ChiCenter bool `protobuf:"varint,7,opt,name=chi_center,json=chiCenter,proto3" json:"chi_center,omitempty"`
	// 3+12
	ChiRight   bool  `protobuf:"varint,8,opt,name=chi_right,json=chiRight,proto3" json:"chi_right,omitempty"`
	DropMask   int64 `protobuf:"varint,9,opt,name=drop_mask,json=dropMask,proto3" json:"drop_mask,omitempty"`
	RiichiMask int64 `protobuf:"varint,10,opt,name=riichi_mask,json=riichiMask,proto3" json:"riichi_mask,omitempty"`
	Win        bool  `protobuf:"varint,11,opt,name=win,proto3" json:"win,omitempty"`
	Draw       bool  `protobuf:"varint,12,opt,name=draw,proto3" json:"draw,omitempty"`
	// Suggested to show noten (could show tempai)
	// Could be used for some rulesets
	Noten bool `protobuf:"varint,13,opt,name=noten,proto3" json:"noten,omitempty"`
	// Specific for some rules, where leader could continue game (agari yame).
	ContinueGame bool `protobuf:"varint,14,opt,name=continue_game,json=continueGame,proto3" json:"continue_game,omitempty"`
	// Time to answer. Should be used to display timer to player.
	// Client should not take any action if player does not select an answer in given time.
	// After the timeout server will discard the event.
	// Server could add additional time on its side to gurantee player will have at least
	// timeout time.
	Timeout *duration.Duration `protobuf:"bytes,15,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Means all suggest are canceled. Must not be answered.
	Canceled             bool     `protobuf:"varint,16,opt,name=canceled,proto3" json:"canceled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Suggest) Reset()         { *m = Suggest{} }
func (m *Suggest) String() string { return proto.CompactTextString(m) }
func (*Suggest) ProtoMessage()    {}
func (*Suggest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6293c9cc04331e8d, []int{4}
}

func (m *Suggest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Suggest.Unmarshal(m, b)
}
func (m *Suggest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Suggest.Marshal(b, m, deterministic)
}
func (m *Suggest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Suggest.Merge(m, src)
}
func (m *Suggest) XXX_Size() int {
	return xxx_messageInfo_Suggest.Size(m)
}
func (m *Suggest) XXX_DiscardUnknown() {
	xxx_messageInfo_Suggest.DiscardUnknown(m)
}

var xxx_messageInfo_Suggest proto.InternalMessageInfo

func (m *Suggest) GetSuggestId() int64 {
	if m != nil {
		return m.SuggestId
	}
	return 0
}

func (m *Suggest) GetPon() bool {
	if m != nil {
		return m.Pon
	}
	return false
}

func (m *Suggest) GetKan() bool {
	if m != nil {
		return m.Kan
	}
	return false
}

func (m *Suggest) GetClosedKanMask() int64 {
	if m != nil {
		return m.ClosedKanMask
	}
	return 0
}

func (m *Suggest) GetUpgradeInstances() *base.Instances {
	if m != nil {
		return m.UpgradeInstances
	}
	return nil
}

func (m *Suggest) GetChiLeft() bool {
	if m != nil {
		return m.ChiLeft
	}
	return false
}

func (m *Suggest) GetChiCenter() bool {
	if m != nil {
		return m.ChiCenter
	}
	return false
}

func (m *Suggest) GetChiRight() bool {
	if m != nil {
		return m.ChiRight
	}
	return false
}

func (m *Suggest) GetDropMask() int64 {
	if m != nil {
		return m.DropMask
	}
	return 0
}

func (m *Suggest) GetRiichiMask() int64 {
	if m != nil {
		return m.RiichiMask
	}
	return 0
}

func (m *Suggest) GetWin() bool {
	if m != nil {
		return m.Win
	}
	return false
}

func (m *Suggest) GetDraw() bool {
	if m != nil {
		return m.Draw
	}
	return false
}

func (m *Suggest) GetNoten() bool {
	if m != nil {
		return m.Noten
	}
	return false
}

func (m *Suggest) GetContinueGame() bool {
	if m != nil {
		return m.ContinueGame
	}
	return false
}

func (m *Suggest) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *Suggest) GetCanceled() bool {
	if m != nil {
		return m.Canceled
	}
	return false
}

func init() {
	proto.RegisterType((*Server)(nil), "mahjong.game.Server")
	proto.RegisterType((*RoundRecover)(nil), "mahjong.game.RoundRecover")
	proto.RegisterType((*GameEndEvent)(nil), "mahjong.game.GameEndEvent")
	proto.RegisterType((*GameStartEvent)(nil), "mahjong.game.GameStartEvent")
	proto.RegisterType((*Suggest)(nil), "mahjong.game.Suggest")
}

func init() { proto.RegisterFile("public/game/server.proto", fileDescriptor_6293c9cc04331e8d) }

var fileDescriptor_6293c9cc04331e8d = []byte{
	// 914 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x55, 0xed, 0x6f, 0x1b, 0x35,
	0x18, 0x6f, 0x49, 0x97, 0x5c, 0x9e, 0x24, 0x5d, 0x67, 0x95, 0xcd, 0xcd, 0x60, 0x94, 0x20, 0xa1,
	0x4e, 0x1a, 0x39, 0xb4, 0x31, 0xa6, 0xf1, 0xf2, 0x65, 0x6b, 0xa1, 0x11, 0x20, 0x21, 0x07, 0x09,
	0x89, 0x0f, 0x9c, 0x9c, 0x3b, 0xe7, 0x62, 0x72, 0xb1, 0x23, 0x9f, 0xaf, 0xa1, 0x1f, 0xf9, 0x9b,
	0xf9, 0x07, 0x90, 0x1f, 0xfb, 0xae, 0x49, 0xc9, 0x97, 0x28, 0xfe, 0xbd, 0xf8, 0x79, 0xb9, 0x7b,
	0x9e, 0x03, 0xba, 0xae, 0x66, 0x85, 0x4c, 0xe3, 0x9c, 0xaf, 0x44, 0x5c, 0x0a, 0x73, 0x23, 0xcc,
	0x78, 0x6d, 0xb4, 0xd5, 0xa4, 0xbf, 0xe2, 0x8b, 0xbf, 0xb4, 0xca, 0xc7, 0x8e, 0x1a, 0x3e, 0xcb,
	0xb5, 0xce, 0x0b, 0x11, 0x23, 0x37, 0xab, 0xe6, 0x71, 0x56, 0x19, 0x6e, 0xa5, 0x56, 0x5e, 0x3d,
	0x7c, 0x12, 0xee, 0x29, 0x74, 0x1e, 0x8b, 0x1b, 0xa1, 0x6c, 0xb9, 0x87, 0x48, 0xf5, 0x6a, 0xd5,
	0x38, 0x4e, 0xb7, 0x88, 0x42, 0xe7, 0x01, 0x7d, 0x1c, 0xd0, 0x19, 0x2f, 0x05, 0xfe, 0x04, 0x7c,
	0x27, 0xcf, 0xb4, 0x90, 0x42, 0x59, 0xcf, 0x8c, 0xfe, 0x6d, 0x43, 0x7b, 0x8a, 0x89, 0x93, 0x18,
	0x3a, 0x65, 0x95, 0xe7, 0xa2, 0xb4, 0xf4, 0xf0, 0xfc, 0xf0, 0xa2, 0xf7, 0xf2, 0xc3, 0xf1, 0x76,
	0x11, 0xe3, 0xa9, 0x27, 0x59, 0xad, 0x22, 0x2f, 0xe0, 0xc8, 0xf2, 0xa5, 0xa0, 0x2d, 0x54, 0x3f,
	0x6e, 0xd4, 0x2e, 0x9f, 0xdf, 0xf8, 0x52, 0x5c, 0xb9, 0x4a, 0xae, 0x0f, 0x18, 0xaa, 0x9c, 0x3a,
	0x33, 0x7a, 0x4d, 0x8f, 0xf6, 0xa8, 0x2f, 0x8d, 0x5e, 0x37, 0x6a, 0xa7, 0x22, 0xdf, 0x40, 0x27,
	0x5d, 0x70, 0x95, 0x8b, 0x92, 0x3e, 0x40, 0xc3, 0xb3, 0x1d, 0xc3, 0x34, 0xd5, 0x46, 0xbc, 0xf7,
	0x82, 0xda, 0x58, 0x1b, 0xc8, 0x73, 0x68, 0x95, 0xfc, 0x96, 0xb6, 0xef, 0x15, 0x81, 0x3e, 0x7e,
	0x5b, 0xcb, 0x9d, 0x86, 0xbc, 0x86, 0x4e, 0x26, 0xd2, 0x82, 0x1b, 0x41, 0x3b, 0x28, 0x3f, 0xdb,
	0xcd, 0xcb, 0x73, 0x4d, 0x84, 0xa0, 0x75, 0x11, 0x36, 0x52, 0xd1, 0x68, 0x4f, 0x84, 0xdf, 0xa5,
	0x6a, 0x22, 0x6c, 0xa4, 0xf2, 0x65, 0xf3, 0x0d, 0xed, 0xee, 0x2d, 0x9b, 0x6f, 0xb6, 0xca, 0xe6,
	0x1b, 0xf2, 0x2d, 0x74, 0xa5, 0xca, 0x64, 0xca, 0xad, 0x36, 0x14, 0xd0, 0xf2, 0x74, 0xc7, 0x32,
	0xa9, 0xd9, 0xda, 0x77, 0xa7, 0x27, 0x6f, 0xa1, 0x67, 0x74, 0xa5, 0xb2, 0xa4, 0xb4, 0xdc, 0x58,
	0xda, 0xdb, 0x13, 0x91, 0x39, 0x7e, 0xa2, 0xe6, 0xfa, 0xfa, 0x80, 0x01, 0x8a, 0xa7, 0x4e, 0x4b,
	0xbe, 0x07, 0x70, 0xcf, 0x38, 0x38, 0xfb, 0xe8, 0xfc, 0x68, 0xf7, 0xf1, 0xff, 0xc8, 0x57, 0x02,
	0xc5, 0x4d, 0xe4, 0xbc, 0x46, 0xc8, 0x1b, 0x88, 0xd0, 0x2e, 0x54, 0x46, 0x07, 0x68, 0x1e, 0xfe,
	0xdf, 0x7c, 0xa5, 0xb2, 0xa6, 0x91, 0xb9, 0x3f, 0x93, 0x2f, 0xa1, 0x33, 0xaf, 0x8c, 0xb4, 0x42,
	0xd1, 0xe3, 0xf3, 0xc3, 0x8b, 0xe3, 0x97, 0xa7, 0x3b, 0xe9, 0xfe, 0xe0, 0x39, 0xe7, 0x08, 0x32,
	0xf2, 0x35, 0x74, 0x8c, 0x48, 0xf5, 0x8d, 0x30, 0xf4, 0xe1, 0xbe, 0x48, 0x58, 0x21, 0xf3, 0x0a,
	0xe7, 0x0b, 0x62, 0x72, 0x05, 0x83, 0x75, 0xc1, 0x6f, 0x85, 0x71, 0x35, 0xda, 0xaa, 0xa4, 0x27,
	0x7b, 0x5e, 0xab, 0x5f, 0x51, 0x31, 0x45, 0x41, 0x9d, 0x6b, 0x7f, 0xbd, 0x05, 0x92, 0xaf, 0x20,
	0x2a, 0x85, 0xb5, 0x52, 0xe5, 0x25, 0x7d, 0x74, 0xaf, 0xc1, 0x7e, 0x4a, 0x02, 0x7b, 0x7d, 0xc0,
	0x1a, 0xe5, 0xbb, 0x63, 0xe8, 0x6b, 0x25, 0xf4, 0x3c, 0xf1, 0xc3, 0x3d, 0xfa, 0x0e, 0xfa, 0xdb,
	0x79, 0x92, 0x17, 0xd0, 0xf6, 0x0c, 0x3d, 0x3c, 0x6f, 0x5d, 0xf4, 0xb6, 0xba, 0x10, 0xee, 0x74,
	0x03, 0xca, 0x82, 0x66, 0x74, 0x0b, 0xfd, 0xed, 0x7e, 0x92, 0xf1, 0xdd, 0xac, 0xf8, 0xc1, 0xdd,
	0x6d, 0x62, 0x18, 0x93, 0xbb, 0xf9, 0x78, 0x0b, 0x20, 0x54, 0x96, 0x18, 0xc1, 0x4b, 0xad, 0xe8,
	0x07, 0xd8, 0xf7, 0xe1, 0x8e, 0x25, 0x5c, 0xcf, 0x50, 0xc1, 0xba, 0xa2, 0xfe, 0x3b, 0xfa, 0x13,
	0x8e, 0x77, 0xdf, 0x03, 0xf2, 0x29, 0xf4, 0xfd, 0x42, 0x49, 0xa4, 0xca, 0xc4, 0xdf, 0x98, 0x41,
	0x8b, 0xf5, 0x3c, 0x36, 0x71, 0x10, 0x79, 0x0e, 0x47, 0x52, 0xcd, 0x35, 0x46, 0xba, 0x3f, 0x2e,
	0xee, 0x36, 0xf7, 0x3e, 0x32, 0x94, 0x8c, 0xfe, 0x39, 0x82, 0x4e, 0xd8, 0x33, 0xe4, 0x63, 0x80,
	0xb0, 0x69, 0x12, 0x99, 0x85, 0x7b, 0xbb, 0x01, 0x99, 0x64, 0xe4, 0x04, 0x5a, 0xeb, 0x90, 0x7e,
	0xc4, 0xdc, 0x5f, 0x87, 0x2c, 0xb9, 0xc2, 0x75, 0x14, 0x31, 0xf7, 0x97, 0x7c, 0x0e, 0x0f, 0xd3,
	0x42, 0x97, 0x22, 0x4b, 0x96, 0x5c, 0x25, 0x2b, 0x5e, 0x2e, 0x71, 0xfd, 0xb4, 0xd8, 0xc0, 0xc3,
	0x3f, 0x71, 0xf5, 0x0b, 0x2f, 0x97, 0xe4, 0x12, 0x1e, 0x55, 0xeb, 0xdc, 0xf0, 0x4c, 0x24, 0x52,
	0x95, 0x96, 0xab, 0xb4, 0xd9, 0x3b, 0x4f, 0x9a, 0x74, 0x71, 0x9f, 0x4e, 0x6a, 0x9a, 0x9d, 0x04,
	0x47, 0x83, 0x90, 0x33, 0x88, 0xd2, 0x85, 0x4c, 0x0a, 0x31, 0xb7, 0xb8, 0x7c, 0x22, 0xd7, 0x72,
	0xf9, 0xb3, 0x98, 0x63, 0x2d, 0x8e, 0x4a, 0x85, 0xb2, 0xc2, 0xe0, 0xaa, 0x89, 0x58, 0x37, 0x5d,
	0xc8, 0xf7, 0x08, 0x90, 0xa7, 0xe0, 0x0e, 0x89, 0x91, 0xf9, 0xc2, 0xe2, 0x56, 0x89, 0x98, 0xbb,
	0x8a, 0xb9, 0xb3, 0x23, 0xdd, 0x4a, 0xf4, 0xe9, 0x77, 0x31, 0xfd, 0xc8, 0x01, 0x98, 0xf9, 0x27,
	0xd0, 0x33, 0x52, 0x3a, 0x33, 0xd2, 0x80, 0x34, 0x78, 0x08, 0x05, 0x27, 0x7e, 0x55, 0xf5, 0x7c,
	0x53, 0xdc, 0x46, 0x22, 0x61, 0x23, 0xf5, 0x11, 0xf2, 0x7b, 0xe7, 0x14, 0x1e, 0x28, 0xed, 0xa6,
	0x70, 0x80, 0xa0, 0x3f, 0x90, 0xcf, 0x60, 0x90, 0x6a, 0x65, 0xa5, 0xaa, 0x44, 0xe2, 0x5e, 0x44,
	0x9c, 0xd1, 0x88, 0xf5, 0x6b, 0xd0, 0x3d, 0x3c, 0xf2, 0x0a, 0x3a, 0x56, 0xae, 0x84, 0xae, 0x6c,
	0x18, 0xc8, 0xb3, 0xb1, 0xff, 0xda, 0x8d, 0xeb, 0xaf, 0xdd, 0xf8, 0x32, 0x7c, 0xed, 0x58, 0xad,
	0x24, 0x43, 0x88, 0x52, 0xd7, 0xb4, 0x42, 0x64, 0x38, 0x88, 0xae, 0xde, 0x70, 0x7e, 0xf7, 0xe6,
	0x8f, 0xd7, 0xb9, 0xb4, 0x8b, 0x6a, 0x36, 0x4e, 0xf5, 0x2a, 0xce, 0x94, 0xbe, 0x91, 0x4b, 0x3d,
	0x9f, 0xc7, 0xe1, 0x39, 0x7c, 0xc1, 0xd7, 0x32, 0xce, 0x85, 0xc2, 0xdb, 0xe3, 0xad, 0x0f, 0xdb,
	0xac, 0x8d, 0xd0, 0xab, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x70, 0x1b, 0x09, 0x8d, 0x96, 0x07,
	0x00, 0x00,
}
