// Code generated by protoc-gen-go. DO NOT EDIT.
// source: public/rules/rules_service.proto

package rules

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListRulesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRulesRequest) Reset()         { *m = ListRulesRequest{} }
func (m *ListRulesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRulesRequest) ProtoMessage()    {}
func (*ListRulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dfbead685609eb0, []int{0}
}

func (m *ListRulesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRulesRequest.Unmarshal(m, b)
}
func (m *ListRulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRulesRequest.Marshal(b, m, deterministic)
}
func (m *ListRulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRulesRequest.Merge(m, src)
}
func (m *ListRulesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRulesRequest.Size(m)
}
func (m *ListRulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRulesRequest proto.InternalMessageInfo

type GetRuleRequest struct {
	RuleId               string   `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRuleRequest) Reset()         { *m = GetRuleRequest{} }
func (m *GetRuleRequest) String() string { return proto.CompactTextString(m) }
func (*GetRuleRequest) ProtoMessage()    {}
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dfbead685609eb0, []int{1}
}

func (m *GetRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRuleRequest.Unmarshal(m, b)
}
func (m *GetRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRuleRequest.Marshal(b, m, deterministic)
}
func (m *GetRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRuleRequest.Merge(m, src)
}
func (m *GetRuleRequest) XXX_Size() int {
	return xxx_messageInfo_GetRuleRequest.Size(m)
}
func (m *GetRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRuleRequest proto.InternalMessageInfo

func (m *GetRuleRequest) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

type GetRuleResponse struct {
	Ruleset              *Ruleset `protobuf:"bytes,1,opt,name=ruleset,proto3" json:"ruleset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRuleResponse) Reset()         { *m = GetRuleResponse{} }
func (m *GetRuleResponse) String() string { return proto.CompactTextString(m) }
func (*GetRuleResponse) ProtoMessage()    {}
func (*GetRuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dfbead685609eb0, []int{2}
}

func (m *GetRuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRuleResponse.Unmarshal(m, b)
}
func (m *GetRuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRuleResponse.Marshal(b, m, deterministic)
}
func (m *GetRuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRuleResponse.Merge(m, src)
}
func (m *GetRuleResponse) XXX_Size() int {
	return xxx_messageInfo_GetRuleResponse.Size(m)
}
func (m *GetRuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRuleResponse proto.InternalMessageInfo

func (m *GetRuleResponse) GetRuleset() *Ruleset {
	if m != nil {
		return m.Ruleset
	}
	return nil
}

type ListRulesResponse struct {
	Rules                []*Ruleset `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListRulesResponse) Reset()         { *m = ListRulesResponse{} }
func (m *ListRulesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRulesResponse) ProtoMessage()    {}
func (*ListRulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dfbead685609eb0, []int{3}
}

func (m *ListRulesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRulesResponse.Unmarshal(m, b)
}
func (m *ListRulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRulesResponse.Marshal(b, m, deterministic)
}
func (m *ListRulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRulesResponse.Merge(m, src)
}
func (m *ListRulesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRulesResponse.Size(m)
}
func (m *ListRulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRulesResponse proto.InternalMessageInfo

func (m *ListRulesResponse) GetRules() []*Ruleset {
	if m != nil {
		return m.Rules
	}
	return nil
}

func init() {
	proto.RegisterType((*ListRulesRequest)(nil), "mahjong.rules.ListRulesRequest")
	proto.RegisterType((*GetRuleRequest)(nil), "mahjong.rules.GetRuleRequest")
	proto.RegisterType((*GetRuleResponse)(nil), "mahjong.rules.GetRuleResponse")
	proto.RegisterType((*ListRulesResponse)(nil), "mahjong.rules.ListRulesResponse")
}

func init() { proto.RegisterFile("public/rules/rules_service.proto", fileDescriptor_0dfbead685609eb0) }

var fileDescriptor_0dfbead685609eb0 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0x28, 0x4d, 0xca,
	0xc9, 0x4c, 0xd6, 0x2f, 0x2a, 0xcd, 0x49, 0x2d, 0x86, 0x90, 0xf1, 0xc5, 0xa9, 0x45, 0x65, 0x99,
	0xc9, 0xa9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xbc, 0xb9, 0x89, 0x19, 0x59, 0xf9, 0x79,
	0xe9, 0x7a, 0x60, 0x49, 0x29, 0x09, 0x4c, 0x0d, 0x10, 0x85, 0x4a, 0x42, 0x5c, 0x02, 0x3e, 0x99,
	0xc5, 0x25, 0x41, 0x20, 0xa1, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x25, 0x4d, 0x2e, 0x3e,
	0xf7, 0x54, 0xb0, 0x10, 0x54, 0x44, 0x48, 0x9c, 0x8b, 0x1d, 0xa4, 0x29, 0x3e, 0x33, 0x45, 0x82,
	0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0x0d, 0xc4, 0xf5, 0x4c, 0x51, 0x72, 0xe6, 0xe2, 0x87, 0x2b,
	0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x32, 0x80, 0xa8, 0x2d, 0x4e, 0x2d, 0x01, 0xab, 0xe5,
	0x36, 0x12, 0xd3, 0x43, 0x71, 0x8c, 0x5e, 0x10, 0x44, 0x36, 0x08, 0xa6, 0x4c, 0xc9, 0x91, 0x4b,
	0x10, 0xc9, 0x0d, 0x50, 0x63, 0x74, 0xb8, 0x58, 0xc1, 0xf2, 0x12, 0x8c, 0x0a, 0xcc, 0x78, 0x0c,
	0x81, 0x28, 0x32, 0x5a, 0xc1, 0xc8, 0xc5, 0x03, 0x16, 0x0a, 0x86, 0x04, 0x83, 0x90, 0x1f, 0x17,
	0x27, 0xdc, 0x4c, 0x21, 0x79, 0x34, 0xcd, 0xe8, 0x3e, 0x96, 0x52, 0xc0, 0xad, 0x00, 0xea, 0x1c,
	0x0f, 0x2e, 0x76, 0xa8, 0x47, 0x85, 0x64, 0xd1, 0x14, 0xa3, 0x86, 0x95, 0x94, 0x1c, 0x2e, 0x69,
	0x88, 0x49, 0x4e, 0x16, 0x51, 0x66, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9,
	0xfa, 0x29, 0x79, 0xf9, 0x65, 0x99, 0xd9, 0xf9, 0x69, 0x69, 0xfa, 0x50, 0x5d, 0xba, 0x89, 0x05,
	0x99, 0xfa, 0xe9, 0xa9, 0x79, 0xe0, 0xe8, 0xd1, 0x47, 0x8e, 0xb7, 0x24, 0x36, 0xb0, 0x98, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x32, 0x88, 0xee, 0x27, 0xff, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RulesServiceClient is the client API for RulesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RulesServiceClient interface {
	ListRules(ctx context.Context, in *ListRulesRequest, opts ...grpc.CallOption) (*ListRulesResponse, error)
	GetRule(ctx context.Context, in *GetRuleRequest, opts ...grpc.CallOption) (*GetRuleResponse, error)
}

type rulesServiceClient struct {
	cc *grpc.ClientConn
}

func NewRulesServiceClient(cc *grpc.ClientConn) RulesServiceClient {
	return &rulesServiceClient{cc}
}

func (c *rulesServiceClient) ListRules(ctx context.Context, in *ListRulesRequest, opts ...grpc.CallOption) (*ListRulesResponse, error) {
	out := new(ListRulesResponse)
	err := c.cc.Invoke(ctx, "/mahjong.rules.RulesService/ListRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rulesServiceClient) GetRule(ctx context.Context, in *GetRuleRequest, opts ...grpc.CallOption) (*GetRuleResponse, error) {
	out := new(GetRuleResponse)
	err := c.cc.Invoke(ctx, "/mahjong.rules.RulesService/GetRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RulesServiceServer is the server API for RulesService service.
type RulesServiceServer interface {
	ListRules(context.Context, *ListRulesRequest) (*ListRulesResponse, error)
	GetRule(context.Context, *GetRuleRequest) (*GetRuleResponse, error)
}

func RegisterRulesServiceServer(s *grpc.Server, srv RulesServiceServer) {
	s.RegisterService(&_RulesService_serviceDesc, srv)
}

func _RulesService_ListRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RulesServiceServer).ListRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mahjong.rules.RulesService/ListRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RulesServiceServer).ListRules(ctx, req.(*ListRulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RulesService_GetRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RulesServiceServer).GetRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mahjong.rules.RulesService/GetRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RulesServiceServer).GetRule(ctx, req.(*GetRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RulesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mahjong.rules.RulesService",
	HandlerType: (*RulesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRules",
			Handler:    _RulesService_ListRules_Handler,
		},
		{
			MethodName: "GetRule",
			Handler:    _RulesService_GetRule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "public/rules/rules_service.proto",
}
