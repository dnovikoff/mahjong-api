syntax = "proto3";

package mahjong.game;

import "public/base/base.proto";

option go_package = "github.com/dnovikoff/mahjong-api/genproto/public/game";

// Server will treat any incorrect answer as a cancel event.
// For example, when you try to Drop tile with riichi flag, on a wrong tile
// or when not in tempai - it will lead to tsumogiri.
// When you get Server response with, previously sent suggest_id and cancel=true,
// this means that the event is outdated (ex. priority action by other player or timeout).
// It is still safe to send answers on outdated event, in this case server
// just omits the answer and continues waiting for answer with valid suggest_id (if any).
message Client {
    // See Server.suggest.suggest_id
    int64 suggest_id = 1;
    oneof oneof_client {
        // It is safe to answer cancel on any suggest.
        // In this case server will take default action.
        // For take is will be tsumogiri.
        // For call actions it will be any possible tile dropped.
        bool cancel = 2;
        ClientDrop drop = 3;
        // Selected tiles.
        // Server will autodetect call type.
        base.Instances call = 4;
        bool win = 5;
        bool draw = 6;
        bool noten = 7;
        bool continue_game = 8;
        // New client settings, applied on server.
        Settings settings = 9;
    }
}

message ClientDrop {
    int64 instance = 1;
    bool riichi = 2;
}

// Settings will be applied on server, even when disconnected.
// You will get confirmation on settings changes from server (see Server.settings).
message Settings {
    bool drop_tsumo = 1;
    bool auto_win = 2;
    bool no_declare = 3;
    bool auto_tempai = 4;
    // For optional agari-yame
    bool auto_end_game = 5;
}